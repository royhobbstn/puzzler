{"version":3,"sources":["data/constants.js","data/inventory.js","data/linked-list/1-prepend.js","data/linked-list/2-append.js","data/linked-list/3-delete.js","data/linked-list/4-find.js","data/linked-list/5-deleteTail.js","data/linked-list/6-deleteHead.js","data/linked-list/7-fromArray.js","data/linked-list/8-toArray.js","data/linked-list/9-reverse.js","data/doubly-linked-list/10-prepend.js","data/doubly-linked-list/11-append.js","data/doubly-linked-list/12-delete.js","data/doubly-linked-list/13-find.js","data/doubly-linked-list/14-deleteTail.js","data/doubly-linked-list/15-deleteHead.js","data/doubly-linked-list/16-fromArray.js","data/doubly-linked-list/17-toArray.js","data/doubly-linked-list/18-reverse.js","data/algorithms/19-fibonacci-recursive.js","data/algorithms/20-fibonacci-iterative.js","data/queue/21-implement-from-ll.js","data/queue/22-implement-from-array.js","data/stack/23-implement-from-ll.js","data/stack/24-implement-from-array.js","data/hash-table/25-implement-set.js","data/hash-table/26-implement-get.js","data/hash-table/27-implement-delete.js","data/heap/28-child-functions.js","data/heap/29-parent-functions.js","data/heap/30-peek.js","data/heap/31-find.js","data/heap/32-poll.js","data/heap/33-add.js","data/heap/34-remove.js","data/heap/35-heapifyUp.js","data/heap/36-heapifyDown.js","data/binary-search-tree/37-insert.js","data/binary-search-tree/38-search.js","data/binary-search-tree/39-delete.js","data/binary-search-tree/40-pre-order-iterative.js","data/binary-search-tree/41-pre-order-recursive.js","data/binary-search-tree/42-in-order-iterative.js","data/binary-search-tree/43-in-order-recursive.js","data/binary-search-tree/44-post-order-iterative.js","data/binary-search-tree/45-post-order-recursive.js","data/binary-search-tree/46-level-order-bfs.js","data/graph/47-add-vertex.js","data/graph/48-add-edge.js","data/graph/49-delete-vertex.js","data/graph/50-delete-edge.js","data/graph/51-dfs.js","data/graph/52-bfs.js","data/trie/53-insert.js","data/trie/54-search.js","data/trie/55-delete.js","redux/gameStore.js","worker.js","personalBests.js","util.js","redux/thunks.js","Game/EditorMain.js","Game/EditorSecondary.js","Game/TestCodeModal.js","Game/TestCaseTable.js","Game/TabCards.js","Game/Problem.js","redux/filterStore.js","SessionStats.js","MainMenu.js","Home/ResultsCard.js","Home/SelectionsCard.js","Home/CategoryCard.js","Home/ControlCard.js","Home/Filters.js","Home/HomePage.js","ProblemTextModal.js","App.js","index.js"],"names":["DATA_STRUCTURE","HEAP","aggregate","1","problemID","problemName","problemText","testCases","id","name","inherit","code","evaluate","expected","setupCode","category","type","difficulty","maxExecutionTime","solution","stages","solutionLines","stage","text","2","3","4","5","6","7","JSON","stringify","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","undefined","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","maxEffort","Object","keys","forEach","key","effortCount","line","effort","MAX_EFFORT","inventory","categories","Array","from","Set","map","sort","gameSlice","createSlice","initialState","value","value2","results","revealButtonPressed","isBusyTesting","activeIndex","totalSeconds","isRunning","open","noteCode","tableSort","sessionHistory","reducers","setValue","state","payload","setValue2","setResults","setRevealButtonPressed","setIsBusyTesting","setActiveIndex","setTotalSeconds","setOpen","setNoteCode","updateTableSort","setSessionHistory","incrementTotalSeconds","setIsRunning","startRunningTests","concludeRunningTests","r","entry","every","d","ok","push","clickNextToResults","clickSkipToResults","seconds","clickNext","clickSkip","revealAnswer","data","join","actions","gameReducer","reducer","Worker_fn","Worker","submitResult","personalBestsRaw","localStorage","getItem","personalBests","parse","Error","previousBest","setItem","err","getPersonalBests","constructTest","test","idRef","foundCase","find","console","error","convertToTimer","secondsRaw","hours","minutes","Math","floor","convertToHoursMinutesSeconds","String","padStart","colorCodeTime","passedAllTests","personalBest","color","length","clickRun","createAsyncThunk","thunkAPI","a","getState","game","dispatch","promisedResults","worker","obj","Comlink","response","catch","e","message","timeout","Promise","resolve","reject","setTimeout","race","val","terminate","representation","presentation","actual","all","then","EditorMain","useDispatch","useSelector","editor1","React","propsRef","useParams","current","style","padding","width","backgroundColor","borderRadius","ref","placeholder","mode","theme","onChange","editor","resize","height","showGutter","highlightActiveLine","wrapEnabled","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","commands","bindKey","win","mac","exec","formatted","prettier","format","session","getValue","parser","plugins","parserBabel","log","EditorSecondary","editor2","readOnly","hljs","registerLanguage","javascript","TestCodeModal","Modal","onClose","onOpen","Header","Content","whiteSpace","dangerouslySetInnerHTML","__html","highlight","Actions","Button","onClick","TestCaseTable","sortedResults","b","Table","celled","compact","className","Row","HeaderCell","textAlign","cursor","Body","Cell","Icon","role","constructedTest","converter","showdown","Converter","TabCards","hasTests","Card","fluid","raised","overflowY","makeHtml","Problem","transform","durationIndex","entries","index","duration","Infinity","defaultCategoryData","isSelected","filterSlice","selections","showModal","activeProblemText","dsChecked","algChecked","minEffort","begChecked","intChecked","advChecked","setSelections","shiftSelection","slice","setShowModal","setActiveProblemText","setCategories","setDsChecked","setAlgChecked","setEffortSlider","pressReset","setBegChecked","setIntChecked","setAdvChecked","filterReducer","SessionStats","history","useHistory","paddingBottom","margin","maxWidth","float","letterSpacing","measuredTime","bestTime","display","MainMenu","filter","passedTests","showNextButton","hasNext","Boolean","Menu","Item","Group","Popup","content","trigger","icon","fontWeight","fontSize","fontVariant","disabled","nextId","contextMessage","position","ResultsCard","addProblemId","filteredResults","includes","header","Divider","lineHeight","random","addRandom","labelPosition","clear","problem","inProblemSet","border","verticalAlign","boxShadow","colSpan","SelectionsCard","primary","CategoryCard","allAreSelected","noneAreSelected","item","Checkbox","label","updatedCategories","updateCheckbox","checked","ControlCard","selectedMinValue","selectedMaxValue","onSliderValuesChange","minValue","maxValue","sliderMinValue","sliderMaxValue","Filters","runFilters","chosenCategories","filtered","Number","overflowX","top","left","HomePage","ProblemTextModal","interval","App","window","setInterval","clearInterval","exact","path","children","combineReducers","persistConfig","version","storage","storageSession","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fd88fa76.chunk.js","sourcesContent":["export const DATA_STRUCTURE = 'data-structure';\nexport const ALGORITHM = 'algorithm';\n\nexport const BEGINNER = 'B';\nexport const INTERMEDIATE = 'I';\nexport const ADVANCED = 'A';\n\nexport const LINKED_LIST = 'Linked List';\nexport const DOUBLY_LINKED_LIST = 'Doubly Linked List';\nexport const QUEUE = 'Queue';\nexport const STACK = 'Stack';\nexport const HASH_TABLE = 'Hash-Table';\nexport const HEAP = 'Heap';\nexport const BINARY_SEARCH_TREE = 'Binary Search Tree';\nexport const GRAPH = 'Graph';\nexport const TRIE = 'Trie';\n\nexport const FIBONACCI = 'Fibonacci';\n","//\n\nimport { data as _ll_prepend } from './linked-list/1-prepend.js';\nimport { data as _ll_append } from './linked-list/2-append.js';\nimport { data as _ll_delete } from './linked-list/3-delete.js';\nimport { data as _ll_find } from './linked-list/4-find.js';\nimport { data as _ll_deleteTail } from './linked-list/5-deleteTail.js';\nimport { data as _ll_deleteHead } from './linked-list/6-deleteHead.js';\nimport { data as _ll_fromArray } from './linked-list/7-fromArray.js';\nimport { data as _ll_toArray } from './linked-list/8-toArray.js';\nimport { data as _ll_reverse } from './linked-list/9-reverse.js';\nimport { data as _dll_prepend } from './doubly-linked-list/10-prepend.js';\nimport { data as _dll_append } from './doubly-linked-list/11-append.js';\nimport { data as _dll_delete } from './doubly-linked-list/12-delete.js';\nimport { data as _dll_find } from './doubly-linked-list/13-find.js';\nimport { data as _dll_deleteTail } from './doubly-linked-list/14-deleteTail.js';\nimport { data as _dll_deleteHead } from './doubly-linked-list/15-deleteHead.js';\nimport { data as _dll_fromArray } from './doubly-linked-list/16-fromArray.js';\nimport { data as _dll_toArray } from './doubly-linked-list/17-toArray.js';\nimport { data as _dll_reverse } from './doubly-linked-list/18-reverse.js';\nimport { data as _alg_fibonnaci_recursive } from './algorithms/19-fibonacci-recursive.js';\nimport { data as _alg_fibonnaci_iterative } from './algorithms/20-fibonacci-iterative.js';\nimport { data as _queue_implement_ll } from './queue/21-implement-from-ll.js';\nimport { data as _queue_implement_array } from './queue/22-implement-from-array.js';\nimport { data as _stack_implement_ll } from './stack/23-implement-from-ll.js';\nimport { data as _stack_implement_array } from './stack/24-implement-from-array.js';\nimport { data as _ht_implement_set } from './hash-table/25-implement-set.js';\nimport { data as _ht_implement_get } from './hash-table/26-implement-get.js';\nimport { data as _ht_implement_delete } from './hash-table/27-implement-delete.js';\nimport { data as _heap_child_functions } from './heap/28-child-functions.js';\nimport { data as _heap_parent_functions } from './heap/29-parent-functions.js';\nimport { data as _heap_peek } from './heap/30-peek.js';\nimport { data as _heap_find } from './heap/31-find.js';\nimport { data as _heap_poll } from './heap/32-poll.js';\nimport { data as _heap_add } from './heap/33-add.js';\nimport { data as _heap_remove } from './heap/34-remove.js';\nimport { data as _heap_heapifyUp } from './heap/35-heapifyUp.js';\nimport { data as _heap_heapifyDown } from './heap/36-heapifyDown.js';\nimport { data as _bst_insert } from './binary-search-tree/37-insert.js';\nimport { data as _bst_search } from './binary-search-tree/38-search.js';\nimport { data as _bst_delete } from './binary-search-tree/39-delete.js';\nimport { data as _bst_pre_order_iter } from './binary-search-tree/40-pre-order-iterative.js';\nimport { data as _bst_pre_order_rec } from './binary-search-tree/41-pre-order-recursive.js';\nimport { data as _bst_in_order_iter } from './binary-search-tree/42-in-order-iterative.js';\nimport { data as _bst_in_order_rec } from './binary-search-tree/43-in-order-recursive.js';\nimport { data as _bst_post_order_iter } from './binary-search-tree/44-post-order-iterative.js';\nimport { data as _bst_post_order_rec } from './binary-search-tree/45-post-order-recursive.js';\nimport { data as _bst_level_order_bfs } from './binary-search-tree/46-level-order-bfs.js';\nimport { data as _graph_add_vertex } from './graph/47-add-vertex.js';\nimport { data as _graph_add_edge } from './graph/48-add-edge.js';\nimport { data as _graph_delete_vertex } from './graph/49-delete-vertex.js';\nimport { data as _graph_delete_edge } from './graph/50-delete-edge.js';\nimport { data as _graph_dfs } from './graph/51-dfs.js';\nimport { data as _graph_bfs } from './graph/52-bfs.js';\nimport { data as _trie_insert } from './trie/53-insert.js';\nimport { data as _trie_search } from './trie/54-search.js';\nimport { data as _trie_delete } from './trie/55-delete.js';\n\nconst aggregate = {\n  1: _ll_prepend,\n  2: _ll_append,\n  3: _ll_delete,\n  4: _ll_find,\n  5: _ll_deleteTail,\n  6: _ll_deleteHead,\n  7: _ll_fromArray,\n  8: _ll_toArray,\n  9: _ll_reverse,\n  10: _dll_prepend,\n  11: _dll_append,\n  12: _dll_delete,\n  13: _dll_find,\n  14: _dll_deleteTail,\n  15: _dll_deleteHead,\n  16: _dll_fromArray,\n  17: _dll_toArray,\n  18: _dll_reverse,\n  19: _alg_fibonnaci_recursive,\n  20: _alg_fibonnaci_iterative,\n  21: _queue_implement_ll,\n  22: _queue_implement_array,\n  23: _stack_implement_ll,\n  24: _stack_implement_array,\n  25: _ht_implement_set,\n  26: _ht_implement_get,\n  27: _ht_implement_delete,\n  28: _heap_child_functions,\n  29: _heap_parent_functions,\n  30: _heap_peek,\n  31: _heap_find,\n  32: _heap_poll,\n  33: _heap_add,\n  34: _heap_remove,\n  35: _heap_heapifyUp,\n  36: _heap_heapifyDown,\n  37: _bst_insert,\n  38: _bst_search,\n  39: _bst_delete,\n  40: _bst_pre_order_iter,\n  41: _bst_pre_order_rec,\n  42: _bst_in_order_iter,\n  43: _bst_in_order_rec,\n  44: _bst_post_order_iter,\n  45: _bst_post_order_rec,\n  46: _bst_level_order_bfs,\n  47: _graph_add_vertex,\n  48: _graph_add_edge,\n  49: _graph_delete_vertex,\n  50: _graph_delete_edge,\n  51: _graph_dfs,\n  52: _graph_bfs,\n  53: _trie_insert,\n  54: _trie_search,\n  55: _trie_delete,\n};\n\nlet maxEffort = 0;\n\n// add a computed 'effort' property; estimated code lines to write\nObject.keys(aggregate).forEach(key => {\n  const item = aggregate[key];\n  const solutionLines = item.solution.solutionLines;\n\n  let effortCount = 0;\n  solutionLines.forEach(line => {\n    if (line.stage > 0) {\n      effortCount++;\n    }\n  });\n\n  if (effortCount > maxEffort) {\n    maxEffort = effortCount;\n  }\n\n  aggregate[key].effort = effortCount;\n});\n\n// todo shuttle this off to constants.js\nexport const MIN_EFFORT = 0;\nexport const MAX_EFFORT = maxEffort;\n\nexport const inventory = aggregate;\n\nexport const categories = Array.from(\n  new Set(Object.keys(aggregate).map(key => aggregate[key].category)),\n).sort();\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  prepend(value) {' },\n  { stage: 2, text: '    const newNode = new LinkedListNode(value, this.head);' },\n  { stage: 2, text: '    this.head = newNode;' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (!this.tail) {' },\n  { stage: 3, text: '      this.tail = newNode;' },\n  { stage: 3, text: '    }' },\n  { stage: 2, text: '' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 1,\n  problemName: 'Implement **prepend** in a *LinkedList* class.',\n  problemText:\n    'Write a **prepend** method in a *LinkedList* class that accepts an arbitrary `value` parameter, creates a new Node, and inserts it at the front of the list.  The method should return the original list.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'empty list, head value',\n      inherit: [1],\n      code: `ll.prepend(5);`,\n      evaluate: `ll.head.value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'empty list, tail value',\n      inherit: [1],\n      code: `ll.prepend(6);`,\n      evaluate: `ll.tail.value;`,\n      expected: 6,\n    },\n    {\n      id: 4,\n      name: 'insert two nodes',\n      inherit: [1, 2],\n      code: `ll.prepend(7);`,\n      evaluate: `ll.tail.value === 5 && ll.head.value === 7;`,\n      expected: true,\n    },\n    {\n      id: 5,\n      name: 'returns itself',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.prepend(10) === ll;`,\n      expected: true,\n    },\n  ],\n  setupCode: '',\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  append(value) {' },\n  { stage: 2, text: '    const newNode = new LinkedListNode(value);' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (!this.head) {' },\n  { stage: 4, text: '      this.head = newNode;' },\n  { stage: 4, text: '      this.tail = newNode;' },\n  { stage: 4, text: '      return this;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 5, text: '    this.tail.next = newNode;' },\n  { stage: 5, text: '    this.tail = newNode;' },\n  { stage: 5, text: '' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 2,\n  problemName: 'Implement **append** in a *LinkedList* class.',\n  problemText:\n    'Write an **append** method in a *LinkedList* class that accepts an arbitrary `value` parameter, creates a new Node, and inserts it at the end of the list.  The method should return the original list.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'append one node, check head',\n      inherit: [1],\n      code: `ll.append(5);`,\n      evaluate: `ll.head.value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'append one node, check tail',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.tail.value;`,\n      expected: 5,\n    },\n    {\n      id: 4,\n      name: 'append two nodes, check head',\n      inherit: [1, 2],\n      code: `ll.append(7);`,\n      evaluate: `ll.head.value;`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'append two nodes, check tail',\n      inherit: [1, 2, 4],\n      code: ``,\n      evaluate: `ll.tail.value;`,\n      expected: 7,\n    },\n    {\n      id: 6,\n      name: 'returns itself',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.append(10) === ll;`,\n      expected: true,\n    },\n  ],\n  setupCode: '',\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  delete(value) {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    let deletedNode = null;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    while (this.head && this.head.value === value) {' },\n  { stage: 4, text: '      deletedNode = this.head;' },\n  { stage: 4, text: '      this.head = this.head.next;' },\n  { stage: 4, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 5, text: '    let currentNode = this.head;' },\n  { stage: 5, text: '' },\n  { stage: 5, text: '    if (currentNode !== null) {' },\n  { stage: 6, text: '      while (currentNode.next) {' },\n  { stage: 6, text: '        if (currentNode.next.value === value) {' },\n  { stage: 7, text: '          deletedNode = currentNode.next;' },\n  { stage: 7, text: '          currentNode.next = currentNode.next.next;' },\n  { stage: 7, text: '        } else {' },\n  { stage: 7, text: '          currentNode = currentNode.next;' },\n  { stage: 6, text: '        }' },\n  { stage: 6, text: '      }' },\n  { stage: 5, text: '    }' },\n  { stage: 5, text: '' },\n  { stage: 8, text: '    if (this.tail.value === value) {' },\n  { stage: 8, text: '      this.tail = currentNode;' },\n  { stage: 8, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 2, text: '    return deletedNode;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 3,\n  problemName: 'Implement **delete** in a *LinkedList* class.',\n  problemText:\n    'Write a **delete** method in a *LinkedList* class that accepts an arbitrary `value` parameter and removes all nodes that match that value.  The method should return the last node deleted (or `null` if no match found).',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'delete head return value',\n      inherit: [1],\n      code: `ll.append(5);ll.append(4);ll.append(7);ll.append(8);`,\n      evaluate: `ll.delete(5).value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'delete tail return value',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.delete(8).value;`,\n      expected: 8,\n    },\n    {\n      id: 4,\n      name: 'delete head resets head',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.delete(5);ll.head.value;`,\n      expected: 4,\n    },\n    {\n      id: 5,\n      name: 'delete tail resets tail',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.delete(8);ll.tail.value;`,\n      expected: 7,\n    },\n    {\n      id: 6,\n      name: 'delete second item, head points to correct next',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.delete(4);ll.head.next.value;`,\n      expected: 7,\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };`,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 270],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  find(value) {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    let currentNode = this.head;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    while (currentNode) {' },\n  { stage: 5, text: '      if (currentNode.value === value) {' },\n  { stage: 5, text: '        return currentNode;' },\n  { stage: 5, text: '      }' },\n  { stage: 5, text: '      currentNode = currentNode.next;' },\n  { stage: 4, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 3, text: '    return null;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 4,\n  problemName: 'Implement **find** in a *LinkedList* class.',\n  problemText:\n    'Write a **find** method in a *LinkedList* class that accepts an arbitrary `value` parameter and returns the first node that matches that value, or `null` if no matching value was found.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'find head value',\n      inherit: [1],\n      code: `ll.append(5);ll.append(4);ll.append(7);ll.append(8);`,\n      evaluate: `ll.find(5).value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'find tail value',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.find(8).value;`,\n      expected: 8,\n    },\n    {\n      id: 4,\n      name: 'find a middle value',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.find(7).value;`,\n      expected: 7,\n    },\n    {\n      id: 5,\n      name: 'return null for non-existent value',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.find(17);`,\n      expected: null,\n    },\n    {\n      id: 6,\n      name: 'return null when empty list',\n      inherit: [1],\n      code: ``,\n      evaluate: `ll.find(27);`,\n      expected: null,\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };`,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteTail() {' },\n  { stage: 2, text: '    const deletedTail = this.tail;' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    if (this.head === this.tail) {' },\n  { stage: 4, text: '      this.head = null;' },\n  { stage: 4, text: '      this.tail = null;' },\n  { stage: 4, text: '      return deletedTail;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 5, text: '    let currentNode = this.head;' },\n  { stage: 5, text: '    while (currentNode.next) {' },\n  { stage: 6, text: '      if (!currentNode.next.next) {' },\n  { stage: 7, text: '        currentNode.next = null;' },\n  { stage: 6, text: '      } else {' },\n  { stage: 7, text: '        currentNode = currentNode.next;' },\n  { stage: 6, text: '      }' },\n  { stage: 5, text: '    }' },\n  { stage: 6, text: '' },\n  { stage: 6, text: '    this.tail = currentNode;' },\n  { stage: 6, text: '' },\n  { stage: 2, text: '    return deletedTail;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 5,\n  problemName: 'Implement **deleteTail** in a *LinkedList* class.',\n  problemText:\n    'Write a **deleteTail** method in a *LinkedList* class that will remove the last node (the tail) of a list (if it exists, else null) and return it.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'delete tail and find return value',\n      inherit: [1],\n      code: `ll.append(5);ll.append(4);ll.append(7);ll.append(8);`,\n      evaluate: `ll.deleteTail().value;`,\n      expected: 8,\n    },\n    {\n      id: 3,\n      name: 'properly resets so following tail element can be deleted',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.deleteTail();ll.deleteTail().value;`,\n      expected: 7,\n    },\n    {\n      id: 4,\n      name: 'deleting tail of an empty list returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `ll.deleteTail();`,\n      expected: null,\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };`,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteHead() {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    const deletedHead = this.head;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    if (this.head.next) {' },\n  { stage: 5, text: '      this.head = this.head.next;' },\n  { stage: 4, text: '    } else {' },\n  { stage: 6, text: '      this.head = null;' },\n  { stage: 6, text: '      this.tail = null;' },\n  { stage: 4, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    return deletedHead;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 6,\n  problemName: 'Implement **deleteHead** in a *LinkedList* class.',\n  problemText:\n    'Write a **deleteHead** method in a *LinkedList* class that will remove the first node (the head) of a list (if it exists, else null) and return it.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'delete head and find return value',\n      inherit: [1],\n      code: `ll.append(5);ll.append(4);ll.append(7);ll.append(8);`,\n      evaluate: `ll.deleteHead().value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'delete head, properly set next head, delete and find return value',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.deleteHead();ll.deleteHead().value;`,\n      expected: 4,\n    },\n    {\n      id: 4,\n      name: 'delete head from empty list returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `ll.deleteHead();`,\n      expected: null,\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };`,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '  // IMPLEMENTED: append(value: any) LinkedList' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  fromArray(values) {' },\n  { stage: 3, text: '    values.forEach(value => this.append(value));' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 7,\n  problemName: 'Implement **fromArray** in a *LinkedList* class.',\n  problemText:\n    'Given a *LinkedList* class with an **append** method, create a **fromArray** method that will take in an array of `values` as a parameter and return a *LinkedList*.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'converts array to linked list (and back)',\n      inherit: [1],\n      code: `ll.fromArray([1,2,3,4,5]);`,\n      evaluate: `ll.toArray()`,\n      expected: JSON.stringify([1, 2, 3, 4, 5]),\n    },\n    {\n      id: 3,\n      name: 'double check values by stepping through (head)',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.head.value`,\n      expected: 1,\n    },\n    {\n      id: 4,\n      name: 'double check values by stepping through (tail)',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.tail.value`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'empty fromArray results in empty list',\n      inherit: [1],\n      code: `ll.fromArray([]);`,\n      evaluate: `ll.head == null;`,\n      expected: true,\n    },\n    {\n      id: 6,\n      name: 'empty fromArray results in empty list',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `ll.toArray();`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 7,\n      name: 'double check values by stepping through (head next)',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `ll.head.next.value`,\n      expected: 2,\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };\n  LinkedList.prototype.toArray = function () {\n    const values = [];\n    let currentNode = this.head;\n    while (currentNode) {\n      values.push(currentNode.value);\n      currentNode = currentNode.next;\n    }\n    return values;\n  };\n  `,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  toArray() {' },\n  { stage: 2, text: '    const values = [];' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    let currentNode = this.head;' },\n  { stage: 3, text: '    while (currentNode) {' },\n  { stage: 4, text: '      values.push(currentNode.value);' },\n  { stage: 4, text: '      currentNode = currentNode.next;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 2, text: '    return values;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 8,\n  problemName: 'Implement **toArray** in a *LinkedList* class.',\n  problemText:\n    'Provide a class method **toArray** that converts the value property of each LinkedListNode into a new array item, and returns that array.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'converts empty linked list to empty array',\n      inherit: [1],\n      code: ``,\n      evaluate: `ll.toArray();`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 3,\n      name: 'linked list of 4 items into array',\n      inherit: [1],\n      code: `ll.append(2).append(3).append(4).append(5);`,\n      evaluate: `ll.toArray();`,\n      expected: JSON.stringify([2, 3, 4, 5]),\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };`,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 150],\n    solutionLines: solution,\n  },\n};\n","import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class LinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class LinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  reverse() {' },\n  { stage: 2, text: '    let currNode = this.head;' },\n  { stage: 3, text: '    let prevNode = null;' },\n  { stage: 3, text: '    let nextNode = null;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    while (currNode) {' },\n  { stage: 5, text: '      nextNode = currNode.next;' },\n  { stage: 5, text: '      currNode.next = prevNode;' },\n  { stage: 6, text: '      prevNode = currNode;' },\n  { stage: 6, text: '      currNode = nextNode;' },\n  { stage: 4, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 7, text: '    this.tail = this.head;' },\n  { stage: 7, text: '    this.head = prevNode;' },\n  { stage: 3, text: '' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 9,\n  problemName: 'Reverse a *Linked List*.',\n  problemText:\n    'Write a method to reverse a Linked List in-place (not using a copy) which then returns itself.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ll=new LinkedList();`,\n      evaluate: `Boolean(ll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'reverse a list',\n      inherit: [1],\n      code: `ll.append(1).append(2).append(3).append(4);`,\n      evaluate: `ll.reverse().toArray();`,\n      expected: JSON.stringify([4, 3, 2, 1]),\n    },\n    {\n      id: 3,\n      name: 'reverse an empty list',\n      inherit: [1],\n      code: ``,\n      evaluate: `ll.reverse().toArray();`,\n      expected: JSON.stringify([]),\n    },\n  ],\n  setupCode: `\n  LinkedList.prototype.append = function (value) {\n    const newNode = new LinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    this.tail = newNode;\n    return this;\n  };\n  LinkedList.prototype.toArray = function () {\n    const values = [];\n    let currentNode = this.head;\n    while (currentNode) {\n      values.push(currentNode.value);\n      currentNode = currentNode.next;\n    }\n    return values;\n  };\n  `,\n  category: LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  prepend(value) {' },\n  { stage: 2, text: '    const newNode = new DoublyLinkedListNode(value, this.head);' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (this.head) {' },\n  { stage: 4, text: '      this.head.previous = newNode;' },\n  { stage: 3, text: '    }' },\n  { stage: 4, text: '    this.head = newNode;' },\n  { stage: 3, text: '' },\n  { stage: 5, text: '    if (!this.tail) {' },\n  { stage: 5, text: '      this.tail = newNode;' },\n  { stage: 5, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 10,\n  problemName: 'Implement **prepend** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write a **prepend** method in a *DoublyLinkedList* class that accepts an arbitrary `value` parameter, creates a *DoublyLinkedListNode*, and inserts it at the front of the list.  The method should return the original list.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'prepend element onto empty list',\n      inherit: [1],\n      code: `dll.prepend(5);`,\n      evaluate: `dll.head.value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'prepend element onto empty list, tail correct',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 5,\n    },\n    {\n      id: 4,\n      name: 'prepend 2nd element onto list, head correct',\n      inherit: [1],\n      code: `dll.prepend(7);`,\n      evaluate: `dll.head.value;`,\n      expected: 7,\n    },\n    {\n      id: 5,\n      name: 'prepend 2nd element onto list, tail correct',\n      inherit: [1, 2, 4],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 5,\n    },\n    {\n      id: 6,\n      name: 'prepend 2nd element onto list, head next correct',\n      inherit: [1, 2, 4],\n      code: ``,\n      evaluate: `dll.head.next.value;`,\n      expected: 5,\n    },\n  ],\n  setupCode: '',\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  append(value) {' },\n  { stage: 2, text: '    const newNode = new DoublyLinkedListNode(value);' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (!this.head) {' },\n  { stage: 4, text: '      this.head = newNode;' },\n  { stage: 4, text: '      this.tail = newNode;' },\n  { stage: 4, text: '      return this;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 5, text: '    this.tail.next = newNode;' },\n  { stage: 5, text: '    newNode.previous = this.tail;' },\n  { stage: 5, text: '    this.tail = newNode;' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 11,\n  problemName: 'Implement **append** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write an **append** method in a *DoublyLinkedList* class that accepts an arbitrary `value` parameter, creates a *DoublyLinkedListNode*, and adds it to the end of the list.  The method should return the original list.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'append onto empty list, head set correctly',\n      inherit: [1],\n      code: `dll.append(3);`,\n      evaluate: `dll.head.value;`,\n      expected: 3,\n    },\n    {\n      id: 3,\n      name: 'append onto empty list, tail set correctly',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 3,\n    },\n    {\n      id: 4,\n      name: 'append 2nd item onto list, check head',\n      inherit: [1, 2],\n      code: `dll.append(8);`,\n      evaluate: `dll.head.value;`,\n      expected: 3,\n    },\n    {\n      id: 5,\n      name: 'append 2nd item onto list, check tail',\n      inherit: [1, 2, 4],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 8,\n    },\n    {\n      id: 6,\n      name: 'append 2nd item onto list, check head next',\n      inherit: [1, 2, 4],\n      code: ``,\n      evaluate: `dll.head.next.value;`,\n      expected: 8,\n    },\n  ],\n  setupCode: '',\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  delete(value) {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    let deletedNode = null;' },\n  { stage: 3, text: '    let currentNode = this.head;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    while (currentNode) {' },\n  { stage: 5, text: '      if (currentNode.value === value) {' },\n  { stage: 6, text: '        deletedNode = currentNode;' },\n  { stage: 6, text: '' },\n  { stage: 6, text: '        if (deletedNode === this.head) {' },\n  { stage: 7, text: '          this.head = deletedNode.next;' },\n  { stage: 7, text: '' },\n  { stage: 8, text: '          if (this.head) {' },\n  { stage: 8, text: '            this.head.previous = null;' },\n  { stage: 8, text: '          }' },\n  { stage: 8, text: '' },\n  { stage: 9, text: '          if (deletedNode === this.tail) {' },\n  { stage: 9, text: '            this.tail = null;' },\n  { stage: 9, text: '          }' },\n  { stage: 6, text: '        } else if (deletedNode === this.tail) {' },\n  { stage: 10, text: '          this.tail = deletedNode.previous;' },\n  { stage: 10, text: '          this.tail.next = null;' },\n  { stage: 6, text: '        } else {' },\n  { stage: 11, text: '          const previousNode = deletedNode.previous;' },\n  { stage: 11, text: '          const nextNode = deletedNode.next;' },\n  { stage: 11, text: '' },\n  { stage: 12, text: '          previousNode.next = nextNode;' },\n  { stage: 12, text: '          nextNode.previous = previousNode;' },\n  { stage: 6, text: '        }' },\n  { stage: 5, text: '      }' },\n  { stage: 5, text: '' },\n  { stage: 13, text: '      currentNode = currentNode.next;' },\n  { stage: 4, text: '    }' },\n  { stage: 7, text: '' },\n  { stage: 7, text: '    return deletedNode;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 12,\n  problemName: 'Implement **delete** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write a **delete** method in a *DoublyLinkedList* class that accepts an arbitrary `value` parameter and deletes all `DoublyLinkedListNode` nodes that have a matching value.  The method should return the last node deleted (or `null` if no match found).',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'return null on empty list',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.delete(5);`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'add and cleanly remove node from list (check head)',\n      inherit: [1],\n      code: `dll.append(5);dll.delete(5);`,\n      evaluate: `dll.head`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'add and cleanly remove node from list (check tail)',\n      inherit: [1, 3],\n      code: ``,\n      evaluate: `dll.tail`,\n      expected: null,\n    },\n    {\n      id: 5,\n      name: 'add 3 nodes and delete the first',\n      inherit: [1],\n      code: `dll.append(1).append(2).append(3);`,\n      evaluate: `dll.delete(1);dll.head.value;`,\n      expected: 2,\n    },\n    {\n      id: 6,\n      name: 'add 3 nodes and delete the first (check tail)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.delete(1);dll.tail.value;`,\n      expected: 3,\n    },\n    {\n      id: 7,\n      name: 'add 3 nodes and delete the second (check head connector)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.delete(2);dll.head.next.value;`,\n      expected: 3,\n    },\n    {\n      id: 8,\n      name: 'add 3 nodes and delete the last (check tail)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.delete(3);dll.tail.value;`,\n      expected: 2,\n    },\n    {\n      id: 9,\n      name: 'add 3 nodes and delete them all (check head)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.delete(3);dll.delete(2);dll.delete(1);dll.head;`,\n      expected: null,\n    },\n    {\n      id: 10,\n      name: 'add 3 nodes and delete them all (check tail)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.delete(3);dll.delete(2);dll.delete(1);dll.tail;`,\n      expected: null,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function(value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 420],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  find(value) {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    let currentNode = this.head;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    while (currentNode) {' },\n  { stage: 5, text: '      if (currentNode.value === value) {' },\n  { stage: 5, text: '        return currentNode;' },\n  { stage: 5, text: '      }' },\n  { stage: 6, text: '' },\n  { stage: 6, text: '      currentNode = currentNode.next;' },\n  { stage: 4, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '    return null;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 13,\n  problemName: 'Implement **find** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write a **find** method in a *DoublyLinkedList* class that accepts an arbitrary `value` parameter and finds (returns) the first `DoublyLinkedListNode` that has a matching value (or null if no match found).',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'find on an empty list',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.find(5);`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'add one item, find that item',\n      inherit: [1],\n      code: `dll.append(4);`,\n      evaluate: `dll.find(4).value;`,\n      expected: 4,\n    },\n    {\n      id: 4,\n      name: 'add one item, find an item that does not exist',\n      inherit: [1],\n      code: `dll.append(4);`,\n      evaluate: `dll.find(6);`,\n      expected: null,\n    },\n    {\n      id: 5,\n      name: 'add three items, find an item',\n      inherit: [1],\n      code: `dll.append(1).append(2).append(3);`,\n      evaluate: `dll.find(2).value;`,\n      expected: 2,\n    },\n    {\n      id: 6,\n      name: 'add three items -two dupicates, return the first',\n      inherit: [1],\n      code: `dll.append(1).append(2).append(2);`,\n      evaluate: `dll.find(2) === dll.head.next;`,\n      expected: true,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function(value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteTail() {' },\n  { stage: 2, text: '    if (!this.tail) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    if (this.head === this.tail) {' },\n  { stage: 4, text: '      const deletedTail = this.tail;' },\n  { stage: 4, text: '      this.head = null;' },\n  { stage: 4, text: '      this.tail = null;' },\n  { stage: 4, text: '      return deletedTail;' },\n  { stage: 3, text: '    }' },\n  { stage: 5, text: '' },\n  { stage: 6, text: '    const deletedTail = this.tail;' },\n  { stage: 6, text: '    this.tail = this.tail.previous;' },\n  { stage: 6, text: '    this.tail.next = null;' },\n  { stage: 5, text: '' },\n  { stage: 5, text: '    return deletedTail;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 14,\n  problemName: 'Implement **deleteTail** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write a **deleteTail** method in a *DoublyLinkedList* class that will remove and return the last `DoublyLinkedListNode` in the list, or `null` if the list is empty.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'return null if list is empty',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.deleteTail();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'return item from 1 item list.',\n      inherit: [1],\n      code: `dll.append(5);`,\n      evaluate: `dll.deleteTail().value;`,\n      expected: 5,\n    },\n    {\n      id: 4,\n      name: 'return item from 1 item list - head set correctly.',\n      inherit: [1, 3],\n      code: `dll.deleteTail();`,\n      evaluate: `dll.head;`,\n      expected: null,\n    },\n    {\n      id: 5,\n      name: 'return item from 1 item list - tail set correctly.',\n      inherit: [1, 3],\n      code: `dll.deleteTail();`,\n      evaluate: `dll.tail;`,\n      expected: null,\n    },\n    {\n      id: 6,\n      name: 'add 3 items, deleteTail twice.',\n      inherit: [1],\n      code: `dll.append(5).append(4).append(3);dll.deleteTail();dll.deleteTail();`,\n      evaluate: `dll.head.value`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: 'add 3 items, deleteTail twice.',\n      inherit: [1, 6],\n      code: ``,\n      evaluate: `dll.tail.value`,\n      expected: 5,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function(value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteHead() {' },\n  { stage: 2, text: '    if (!this.head) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    const deletedHead = this.head;' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    if (this.head.next) {' },\n  { stage: 5, text: '      this.head = this.head.next;' },\n  { stage: 5, text: '      this.head.previous = null;' },\n  { stage: 4, text: '    } else {' },\n  { stage: 6, text: '      this.head = null;' },\n  { stage: 6, text: '      this.tail = null;' },\n  { stage: 4, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '    return deletedHead;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 15,\n  problemName: 'Implement **deleteHead** in a *DoublyLinkedList* class.',\n  problemText:\n    'Write a **deleteHead** method in a *DoublyLinkedList* class that will remove and return the first `DoublyLinkedListNode` in the list (or `null` if the list is empty).',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'deleteHead from an empty list returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.deleteHead();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'add item and delete item',\n      inherit: [1],\n      code: `dll.append(8);`,\n      evaluate: `dll.deleteHead().value;`,\n      expected: 8,\n    },\n    {\n      id: 4,\n      name: 'add item and delete item - check head;',\n      inherit: [1],\n      code: `dll.append(8);dll.deleteHead();`,\n      evaluate: `dll.head;`,\n      expected: null,\n    },\n    {\n      id: 5,\n      name: 'add item and delete item',\n      inherit: [1, 4],\n      code: ``,\n      evaluate: `dll.tail;`,\n      expected: null,\n    },\n    {\n      id: 6,\n      name: 'add 3 items and delete one',\n      inherit: [1],\n      code: `dll.append(6).append(7).append(8);`,\n      evaluate: `dll.deleteHead().value;`,\n      expected: 6,\n    },\n    {\n      id: 7,\n      name: 'add 3 items and delete one - check head',\n      inherit: [1, 6],\n      code: `dll.deleteHead();`,\n      evaluate: `dll.head.value;`,\n      expected: 7,\n    },\n    {\n      id: 8,\n      name: 'add 3 items and delete one - check tail',\n      inherit: [1, 6, 7],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 8,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function(value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED: append(value: any) DoublyLinkedList' },\n  { stage: -1, text: '' },\n  { stage: 1, text: '  fromArray(values) {' },\n  { stage: 3, text: '    values.forEach(value => this.append(value));' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 16,\n  problemName: 'Implement **fromArray** in a *DoublyLinkedList* class.',\n  problemText:\n    \"Given a *DoublyLinkedList* class with an **append** method, create a **fromArray** method that will take in an array of `values` as a parameter, populate corresponding `DoublyLinkedListNode`'s and return the list.\",\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'empty array creates empty list - check head',\n      inherit: [1],\n      code: `dll.fromArray([]);`,\n      evaluate: `dll.head;`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'empty array creates empty list - check tail',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `dll.tail;`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'creates one-item list - check head',\n      inherit: [1],\n      code: `dll.fromArray([5]);`,\n      evaluate: `dll.head.value;`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'creates one-item list - check tail',\n      inherit: [1, 4],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 5,\n    },\n    {\n      id: 6,\n      name: 'creates three-item list - check head',\n      inherit: [1],\n      code: `dll.fromArray([6,7,8]);`,\n      evaluate: `dll.head.value;`,\n      expected: 6,\n    },\n    {\n      id: 7,\n      name: 'creates three-item list - check tail',\n      inherit: [1, 6],\n      code: ``,\n      evaluate: `dll.tail.value;`,\n      expected: 8,\n    },\n    {\n      id: 8,\n      name: 'creates three-item list - check head next',\n      inherit: [1, 6],\n      code: ``,\n      evaluate: `dll.head.next.value;`,\n      expected: 7,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function (value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  toArray() {' },\n  { stage: 2, text: '    const nodes = [];' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    let currentNode = this.head;' },\n  { stage: 3, text: '    while (currentNode) {' },\n  { stage: 4, text: '      nodes.push(currentNode.value);' },\n  { stage: 4, text: '      currentNode = currentNode.next;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 2, text: '    return nodes;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 17,\n  problemName: 'Implement **toArray** in a *DoublyLinkedList* class.',\n  problemText:\n    \"Provide a class method **toArray** that converts `DoublyLinkedListNode` `value`'s in a *DoublyLinkedList* into array elements in matching order.\",\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'empty list makes empty array',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.toArray();`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 3,\n      name: 'one item list',\n      inherit: [1],\n      code: `dll.append(4);`,\n      evaluate: `dll.toArray();`,\n      expected: JSON.stringify([4]),\n    },\n    {\n      id: 4,\n      name: 'three item list',\n      inherit: [1],\n      code: `dll.append(4).append(5).append(6);`,\n      evaluate: `dll.toArray();`,\n      expected: JSON.stringify([4, 5, 6]),\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function (value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 150],\n    solutionLines: solution,\n  },\n};\n","import { DOUBLY_LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class DoublyLinkedListNode {' },\n  { stage: 0, text: '  constructor(value, next = null, previous = null) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.next = next;' },\n  { stage: 0, text: '    this.previous = previous;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class DoublyLinkedList {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.head = null;' },\n  { stage: 0, text: '    this.tail = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  reverse() {' },\n  { stage: 2, text: '    let currNode = this.head;' },\n  { stage: 2, text: '    let prevNode = null;' },\n  { stage: 2, text: '    let nextNode = null;' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    while (currNode) {' },\n  { stage: 4, text: '      nextNode = currNode.next;' },\n  { stage: 4, text: '      prevNode = currNode.previous;' },\n  { stage: 4, text: '' },\n  { stage: 5, text: '      currNode.next = prevNode;' },\n  { stage: 5, text: '      currNode.previous = nextNode;' },\n  { stage: 5, text: '' },\n  { stage: 6, text: '      prevNode = currNode;' },\n  { stage: 6, text: '      currNode = nextNode;' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 7, text: '    this.tail = this.head;' },\n  { stage: 7, text: '    this.head = prevNode;' },\n  { stage: 7, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 18,\n  problemName: 'Reverse a *DoublyLinkedList* in-place.',\n  problemText:\n    'Provide a class method **reverse** that will reverse a *DoublyLinkedList* in place (not using a copy), and return the list.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const dll=new DoublyLinkedList();`,\n      evaluate: `Boolean(dll);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'reversing an empty list - still empty',\n      inherit: [1],\n      code: ``,\n      evaluate: `dll.reverse();`,\n      expected: `{\"head\":null,\"tail\":null}`,\n    },\n    {\n      id: 3,\n      name: 'reversing a one item list - check head',\n      inherit: [1],\n      code: `dll.append(5);`,\n      evaluate: `dll.reverse().head.value;`,\n      expected: 5,\n    },\n    {\n      id: 4,\n      name: 'reversing a one item list - check head',\n      inherit: [1, 3],\n      code: ``,\n      evaluate: `dll.reverse().tail.value;`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'reversing a three item list - check head',\n      inherit: [1],\n      code: `dll.append(6).append(7).append(8);`,\n      evaluate: `dll.reverse().head.value;`,\n      expected: 8,\n    },\n    {\n      id: 6,\n      name: 'reversing a three item list - check head',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.reverse().tail.value;`,\n      expected: 6,\n    },\n    {\n      id: 7,\n      name: 'reversing a three item list - check head next',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `dll.reverse().head.next.value;`,\n      expected: 7,\n    },\n  ],\n  setupCode: `\n  DoublyLinkedList.prototype.append = function(value) {\n    const newNode = new DoublyLinkedListNode(value);\n    if (!this.head) {\n      this.head = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    this.tail.next = newNode;\n    newNode.previous = this.tail;\n    this.tail = newNode;\n    return this;\n  }\n  `,\n  category: DOUBLY_LINKED_LIST,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { FIBONACCI, ALGORITHM, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 1, text: 'const fibonacciNth = n => {' },\n  { stage: 2, text: '  if (n === 0 || n === 1) return n;' },\n  { stage: 3, text: '  return fibonacciNth(n - 1) + fibonacciNth(n - 2);' },\n  { stage: 1, text: '};' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 19,\n  problemName: 'Implement a recursive fibonacci function.',\n  problemText:\n    'Implement a function **fibonacciNth** which takes an integer parameter `n` and returns the nth indexed fibonnaci number in the sequence.  For example, n=0 would return 0, n=1 would return 1, n=2 would return 1, and n=3 would return 2. ([0,1,1,2,3,5,8,13... etc])',\n  testCases: [\n    {\n      id: 1,\n      name: '0 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(0);`,\n      expected: 0,\n    },\n    {\n      id: 2,\n      name: '1 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(1);`,\n      expected: 1,\n    },\n    {\n      id: 3,\n      name: '2 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(2);`,\n      expected: 1,\n    },\n    {\n      id: 4,\n      name: '3 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(3);`,\n      expected: 2,\n    },\n    {\n      id: 5,\n      name: '4 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(4);`,\n      expected: 3,\n    },\n    {\n      id: 6,\n      name: '5 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(5);`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: '6 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(6);`,\n      expected: 8,\n    },\n    {\n      id: 8,\n      name: '7 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(7);`,\n      expected: 13,\n    },\n    {\n      id: 9,\n      name: '8 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(8);`,\n      expected: 21,\n    },\n  ],\n  setupCode: '',\n  category: FIBONACCI,\n  type: ALGORITHM,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { FIBONACCI, ALGORITHM, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 1, text: 'function fibonacciNth(n) {' },\n  { stage: 2, text: '  let currentValue = 1;' },\n  { stage: 2, text: '  let previousValue = 0;' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '  if (n <= 1) {' },\n  { stage: 3, text: '    return n;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '  let iteration = 2;' },\n  { stage: 4, text: '' },\n  { stage: 5, text: '  while (iteration <= n) {' },\n  { stage: 6, text: '    currentValue += previousValue;' },\n  { stage: 6, text: '    previousValue = currentValue - previousValue;' },\n  { stage: 6, text: '    iteration++;' },\n  { stage: 5, text: '  }' },\n  { stage: 5, text: '' },\n  { stage: 4, text: '  return currentValue;' },\n  { stage: 1, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 20,\n  problemName: 'Implement an iterative fibonacci function.',\n  problemText:\n    'Implement a function `fibonacciNth` which takes an integer parameter `n` and returns the nth indexed fibonnaci number in the sequence.  For example, n=0 would return 0, n=1 would return 1, n=2 would return 1, and n=3 would return 2. ([0,1,1,2,3,5,8,13... etc])',\n  testCases: [\n    {\n      id: 1,\n      name: '0 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(0);`,\n      expected: 0,\n    },\n    {\n      id: 2,\n      name: '1 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(1);`,\n      expected: 1,\n    },\n    {\n      id: 3,\n      name: '2 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(2);`,\n      expected: 1,\n    },\n    {\n      id: 4,\n      name: '3 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(3);`,\n      expected: 2,\n    },\n    {\n      id: 5,\n      name: '4 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(4);`,\n      expected: 3,\n    },\n    {\n      id: 6,\n      name: '5 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(5);`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: '6 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(6);`,\n      expected: 8,\n    },\n    {\n      id: 8,\n      name: '7 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(7);`,\n      expected: 13,\n    },\n    {\n      id: 9,\n      name: '8 case',\n      inherit: [],\n      code: ``,\n      evaluate: `fibonacciNth(8);`,\n      expected: 21,\n    },\n  ],\n  setupCode: '',\n  category: FIBONACCI,\n  type: ALGORITHM,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { QUEUE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: -1, text: '//  class LinkedListNode {' },\n  { stage: -1, text: '//    constructor(value, next = null) {' },\n  { stage: -1, text: '//      this.value = value;' },\n  { stage: -1, text: '//      this.next = next;' },\n  { stage: -1, text: '//    }' },\n  { stage: -1, text: '//  }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '//  class LinkedList {' },\n  { stage: -1, text: '//    constructor() {' },\n  { stage: -1, text: '//      this.head = null;' },\n  { stage: -1, text: '//      this.tail = null;' },\n  { stage: -1, text: '//    }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '//    append(value: any) LinkedList' },\n  { stage: -1, text: '//    deleteHead() LinkedListNode' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '//  }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '// All code above is implicitly included in your environment' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Queue {' },\n  { stage: 1, text: '  constructor() {' },\n  { stage: 2, text: '    this.linkedList = new LinkedList();' },\n  { stage: 1, text: '  }' },\n  { stage: 1, text: '' },\n  { stage: 3, text: '  isEmpty() {' },\n  { stage: 5, text: '    return !this.linkedList.head;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '  peek() {' },\n  { stage: 6, text: '    if (!this.linkedList.head) {' },\n  { stage: 6, text: '      return null;' },\n  { stage: 6, text: '    }' },\n  { stage: 6, text: '    return this.linkedList.head.value;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '  enqueue(value) {' },\n  { stage: 5, text: '    this.linkedList.append(value);' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '  dequeue() {' },\n  { stage: 7, text: '    const removedHead = this.linkedList.deleteHead();' },\n  { stage: 7, text: '    return removedHead ? removedHead.value : null;' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 21,\n  problemName: 'Implement a *Queue* using a *Linked List*',\n  problemText: `\nGiven a *Queue* class, implement the following methods: \n    \n - **isEmpty** (which returns a Boolean value indicating if there are any items in the queue)\n - **peek** (which returns - but does not remove - the value at the head of the queue)\n - **enqueue** (which adds a value to the end of the queue - does not return anything)\n - **dequeue** (which removes and returns the value at the head of the queue).  \n    \nBase the implementation on the given *LinkedList* base data structure.  Return \\`null\\` for **peek** and **dequeue** if the queue is empty.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const queue=new Queue();`,\n      evaluate: `Boolean(queue);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'peek on an empty queue returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.peek();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'dequeue on an empty queue returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.dequeue();`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'peek returns enqueued item',\n      inherit: [1],\n      code: `queue.enqueue(5);`,\n      evaluate: `queue.peek();`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'peek, queue, dequeue work together properly',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(7);queue.dequeue();`,\n      evaluate: `queue.peek();`,\n      expected: 7,\n    },\n    {\n      id: 6,\n      name: 'peek returns enqueued item (3)',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(6);queue.enqueue(7);`,\n      evaluate: `queue.peek();`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: 'dequeue multiple enqueued items',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(6);queue.enqueue(7);queue.dequeue();queue.dequeue();`,\n      evaluate: `queue.peek();`,\n      expected: 7,\n    },\n    {\n      id: 8,\n      name: 'isEmpty returns true for empty queue',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.isEmpty();`,\n      expected: true,\n    },\n    {\n      id: 9,\n      name: 'isEmpty returns false for queue with an item',\n      inherit: [1],\n      code: `queue.enqueue(5);`,\n      evaluate: `queue.isEmpty();`,\n      expected: false,\n    },\n    {\n      id: 10,\n      name: 'dequeue returns value, not node',\n      inherit: [1],\n      code: `queue.enqueue(5);`,\n      evaluate: `queue.dequeue();`,\n      expected: 5,\n    },\n  ],\n  setupCode: `\n  \n  class LinkedListNode {\n    constructor(value, next = null) {\n      this.value = value;\n      this.next = next;\n    }\n  }\n  \n  class LinkedList {\n    constructor() {\n      this.head = null;\n      this.tail = null;\n    }\n    \n    append(value) {\n      const newNode = new LinkedListNode(value);\n      if (!this.head) {\n        this.head = newNode;\n        this.tail = newNode;\n        return this;\n      }\n      this.tail.next = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    \n    deleteHead() {\n      if (!this.head) {\n        return null;\n      }\n      const deletedHead = this.head;\n      if (this.head.next) {\n        this.head = this.head.next;\n      } else {\n        this.head = null;\n        this.tail = null;\n      }\n      return deletedHead;\n    }\n  }\n  `,\n  category: QUEUE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { QUEUE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Queue {' },\n  { stage: 1, text: '  constructor() {' },\n  { stage: 2, text: '    this.items = [];' },\n  { stage: 1, text: '  }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '  isEmpty() {' },\n  { stage: 5, text: '    return !this.items.length;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '  peek() {' },\n  { stage: 5, text: '    if (this.isEmpty()) {' },\n  { stage: 5, text: '      return null;' },\n  { stage: 5, text: '    }' },\n  { stage: 6, text: '    return this.items[0];' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '  enqueue(value) {' },\n  { stage: 6, text: '    this.items.push(value);' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '  dequeue() {' },\n  { stage: 7, text: '    if (this.isEmpty()) {' },\n  { stage: 7, text: '      return null;' },\n  { stage: 7, text: '    }' },\n  { stage: 7, text: '    return this.items.shift();' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 22,\n  problemName: 'Implement a *Queue* from scratch using an *Array*',\n  problemText: `\nGiven a *Queue* class, implement the following methods: \n    \n - **isEmpty** (which returns a Boolean value indicating if there are any items in the queue)\n - **peek** (which returns - but does not remove - the value at the head of the queue)\n - **enqueue** (which adds a value to the end of the queue - does not return anything)\n - **dequeue** (which removes and returns the value at the head of the queue).  \n    \nBase the implementation on the given *LinkedList* base data structure.  Return \\`null\\` for **peek** and **dequeue** if the queue is empty.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const queue=new Queue();`,\n      evaluate: `Boolean(queue);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'peek on an empty queue returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.peek();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'dequeue on an empty queue returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.dequeue();`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'peek returns enqueued item',\n      inherit: [1],\n      code: `queue.enqueue(5);`,\n      evaluate: `queue.peek();`,\n      expected: 5,\n    },\n    {\n      id: 5,\n      name: 'peek, queue, dequeue work together properly',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(7);queue.dequeue();`,\n      evaluate: `queue.peek();`,\n      expected: 7,\n    },\n    {\n      id: 6,\n      name: 'peek returns enqueued item (3)',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(6);queue.enqueue(7);`,\n      evaluate: `queue.peek();`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: 'dequeue multiple enqueued items',\n      inherit: [1],\n      code: `queue.enqueue(5);queue.enqueue(6);queue.enqueue(7);queue.dequeue();queue.dequeue();`,\n      evaluate: `queue.peek();`,\n      expected: 7,\n    },\n    {\n      id: 8,\n      name: 'isEmpty returns true for empty queue',\n      inherit: [1],\n      code: ``,\n      evaluate: `queue.isEmpty();`,\n      expected: true,\n    },\n    {\n      id: 9,\n      name: 'isEmpty returns false for queue with an item',\n      inherit: [1],\n      code: `queue.enqueue(5);`,\n      evaluate: `queue.isEmpty();`,\n      expected: false,\n    },\n  ],\n  setupCode: '',\n  category: QUEUE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { STACK, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: '//' },\n  { stage: 0, text: '//  class LinkedList {' },\n  { stage: 0, text: '//' },\n  { stage: 0, text: '//    prepend(value: any) LinkedList' },\n  { stage: 0, text: '//' },\n  { stage: 0, text: '//    deleteHead() LinkedListNode' },\n  { stage: 0, text: '//' },\n  { stage: 0, text: '//  }' },\n  { stage: 0, text: '//' },\n  { stage: 0, text: '// All code above is implicitly included in your environment' },\n  { stage: 0, text: '' },\n  { stage: 1, text: 'class Stack {' },\n  { stage: 2, text: '  constructor() {' },\n  { stage: 2, text: '    this.linkedList = new LinkedList();' },\n  { stage: 2, text: '  }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '  isEmpty() {' },\n  { stage: 5, text: '    return !this.linkedList.head;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '  peek() {' },\n  { stage: 5, text: '    if (this.isEmpty()) {' },\n  { stage: 5, text: '      return null;' },\n  { stage: 5, text: '    }' },\n  { stage: 6, text: '    return this.linkedList.head.value;' },\n  { stage: 3, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '  push(value) {' },\n  { stage: 6, text: '    this.linkedList.prepend(value);' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '  pop() {' },\n  { stage: 7, text: '    const removedHead = this.linkedList.deleteHead();' },\n  { stage: 7, text: '    return removedHead ? removedHead.value : null;' },\n  { stage: 4, text: '  }' },\n  { stage: 1, text: '' },\n  { stage: 1, text: '}' },\n  { stage: 1, text: '' },\n];\n\nexport const data = {\n  problemID: 23,\n  problemName: 'Implement a *Stack* using a *Linked List*',\n  problemText:\n    'Given a *Stack* class, implement the following methods: **isEmpty** (which returns a boolean value indicating if there are any values in the stack), **peek** (which returns - but does not remove - the value at the top of the stack), **push** (which adds a value to the top of the stack - does not return anything), and **pop** (which removes and returns the value at the top of the stack).  Base the implementation on the given *LinkedList* base data structure.  Return `null` for **peek** and **pop** if the stack is empty.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const stack=new Stack();`,\n      evaluate: `Boolean(stack);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'peek on empty stack is null',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.peek();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'pop on empty stack is null',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.pop();`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'isEmpty on empty stack is true',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.isEmpty();`,\n      expected: true,\n    },\n    {\n      id: 5,\n      name: 'isEmpty on stack with an item is false',\n      inherit: [1],\n      code: `stack.push(5);`,\n      evaluate: `stack.isEmpty();`,\n      expected: false,\n    },\n    {\n      id: 6,\n      name: 'peek on stack with an item returns that value',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `stack.peek();`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: 'peek on stack with two items returns correct value',\n      inherit: [1, 5],\n      code: `stack.push(9);`,\n      evaluate: `stack.peek();`,\n      expected: 9,\n    },\n    {\n      id: 8,\n      name: 'peek does not remove items',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.peek();stack.peek();`,\n      expected: 9,\n    },\n    {\n      id: 9,\n      name: 'pop removes and returns correct item in stack (1)',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.pop();`,\n      expected: 9,\n    },\n    {\n      id: 10,\n      name: 'pop removes and returns correct item in stack (2)',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.pop();stack.pop();`,\n      expected: 5,\n    },\n  ],\n  setupCode: `\n  class LinkedListNode {\n    constructor(value, next = null) {\n      this.value = value;\n      this.next = next;\n    }\n  }\n  \n  class LinkedList {\n    constructor() {\n      this.head = null;\n      this.tail = null;\n    }\n    \n    prepend(value) {\n      const newNode = new LinkedListNode(value, this.head);\n      this.head = newNode;\n      if (!this.tail) {\n        this.tail = newNode;\n      }\n      return this;\n    }\n    \n    deleteHead() {\n      if (!this.head) {\n        return null;\n      }\n      const deletedHead = this.head;\n      if (this.head.next) {\n        this.head = this.head.next;\n      } else {\n        this.head = null;\n        this.tail = null;\n      }\n      return deletedHead;\n    }\n  }\n  `,\n  category: STACK,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { STACK, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 1, text: 'class Stack {' },\n  { stage: 2, text: '  constructor() {' },\n  { stage: 2, text: '    this.items = [];' },\n  { stage: 2, text: '  }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '  isEmpty() {' },\n  { stage: 5, text: '    return !this.items.length;' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '  peek() {' },\n  { stage: 5, text: '    if (this.isEmpty()) {' },\n  { stage: 5, text: '      return null;' },\n  { stage: 5, text: '    }' },\n  { stage: 6, text: '    return this.items[this.items.length - 1];' },\n  { stage: 3, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '  push(value) {' },\n  { stage: 6, text: '    this.items.push(value);' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '  pop() {' },\n  { stage: 7, text: '    if (this.isEmpty()) {' },\n  { stage: 7, text: '      return null;' },\n  { stage: 7, text: '    }' },\n  { stage: 7, text: '    return this.items.pop();' },\n  { stage: 4, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 1, text: '}' },\n  { stage: 1, text: '' },\n];\n\nexport const data = {\n  problemID: 24,\n  problemName: 'Implement a *Stack* using an *Array*',\n  problemText:\n    'Given a *Stack* class, implement the following methods: **isEmpty** (which returns a boolean indicating if there are any values in the stack), **peek** (which returns - but does not remove - the value at the top of the stack), **push** (which adds a value to the top of the stack - does not return anything), and **pop** (which removes and returns the value at the top of the stack).  Base the implementation on an *Array* data structure.  Return `null` for **peek** and **pop** if the stack is empty.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const stack=new Stack();`,\n      evaluate: `Boolean(stack);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'peek on empty stack is null',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.peek();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'pop on empty stack is null',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.pop();`,\n      expected: null,\n    },\n    {\n      id: 4,\n      name: 'isEmpty on empty stack is true',\n      inherit: [1],\n      code: ``,\n      evaluate: `stack.isEmpty();`,\n      expected: true,\n    },\n    {\n      id: 5,\n      name: 'isEmpty on stack with an item is false',\n      inherit: [1],\n      code: `stack.push(5);`,\n      evaluate: `stack.isEmpty();`,\n      expected: false,\n    },\n    {\n      id: 6,\n      name: 'peek on stack with an item returns that value',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `stack.peek();`,\n      expected: 5,\n    },\n    {\n      id: 7,\n      name: 'peek on stack with two items returns correct value',\n      inherit: [1, 5],\n      code: `stack.push(9);`,\n      evaluate: `stack.peek();`,\n      expected: 9,\n    },\n    {\n      id: 8,\n      name: 'peek does not remove items',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.peek();stack.peek();`,\n      expected: 9,\n    },\n    {\n      id: 9,\n      name: 'pop removes and returns correct item in stack (1)',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.pop();`,\n      expected: 9,\n    },\n    {\n      id: 10,\n      name: 'pop removes and returns correct item in stack (2)',\n      inherit: [1, 5, 7],\n      code: ``,\n      evaluate: `stack.pop();stack.pop();`,\n      expected: 5,\n    },\n  ],\n  setupCode: '',\n  category: STACK,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { HASH_TABLE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: -1, text: '// class LinkedList {' },\n  { stage: -1, text: '//   append(key: string, value: any) LinkedList' },\n  { stage: -1, text: '//   findKey(key: string) LinkedListNode' },\n  { stage: -1, text: '// }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '// All code above is implicitly included in your environment' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class HashTable {' },\n  { stage: 0, text: '  constructor(hashTableSize = 32) {' },\n  { stage: 0, text: '    this.buckets = Array(hashTableSize)' },\n  { stage: 0, text: '      .fill(null)' },\n  { stage: 0, text: '      .map(() => new LinkedList());' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED:  hash(key: string) int' },\n  { stage: -1, text: '' },\n  { stage: 1, text: '  set(key, value) {' },\n  { stage: 2, text: '    const keyHash = this.hash(key);' },\n  { stage: 2, text: '    const bucketLinkedList = this.buckets[keyHash];' },\n  { stage: 3, text: '    const node = bucketLinkedList.findKey(key);' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    if (!node) {' },\n  { stage: 5, text: '      bucketLinkedList.append(key, value);' },\n  { stage: 4, text: '    } else {' },\n  { stage: 5, text: '      node.value = value;' },\n  { stage: 4, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 25,\n  problemName: 'Implement **set** in a *HashTable* class.',\n  problemText:\n    'Given a *HashTable* class and a *LinkedList* class, implement a **set(key, value)** method in the *HashTable* class that will add or modify a `value` in the hash table for a given `key`.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ht=new HashTable();`,\n      evaluate: `Boolean(ht);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'adds a new value',\n      inherit: [1],\n      code: `ht.set('key1', 5);`,\n      evaluate: `ht.get('key1');`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'updates an existing value',\n      inherit: [1, 2],\n      code: `ht.set('key1', 7);`,\n      evaluate: `ht.get('key1');`,\n      expected: 7,\n    },\n  ],\n  setupCode: `\n  class LinkedListNode {\n    constructor(key, value, next = null) {\n      this.key = key;\n      this.value = value;\n      this.next = next;\n    }\n  }\n  class LinkedList {\n    constructor() {\n      this.head = null;\n      this.tail = null;\n    }\n    append(key, value) {\n      const newNode = new LinkedListNode(key, value);\n      if (!this.head) {\n        this.head = newNode;\n        this.tail = newNode;\n        return this;\n      }\n      this.tail.next = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    findKey(key) {\n      if (!this.head) {\n        return null;\n      }\n      let current = this.head;\n      while (current) {\n        if (current.key === key) {\n          return current;\n        }\n        current = current.next;\n      }\n      return null;\n    }\n  }\n  HashTable.prototype.hash = function(key) {\n    const hash = Array.from(key).reduce(\n      (hashAccumulator, keySymbol) => hashAccumulator + keySymbol.charCodeAt(0), 0);\n      return hash % this.buckets.length;\n  };\n  HashTable.prototype.get = function(key) {\n    const bucketLinkedList = this.buckets[this.hash(key)];\n    const node = bucketLinkedList.findKey(key);\n    return node ? node.value : undefined;\n  };\n  `,\n  category: HASH_TABLE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { HASH_TABLE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: -1, text: '// class LinkedList {' },\n  { stage: -1, text: '//   findKey(key: string) LinkedListNode' },\n  { stage: -1, text: '// }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '// All code above is implicitly included in your environment' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class HashTable {' },\n  { stage: 0, text: '  constructor(hashTableSize = 32) {' },\n  { stage: 0, text: '    this.buckets = Array(hashTableSize)' },\n  { stage: 0, text: '      .fill(null)' },\n  { stage: 0, text: '      .map(() => new LinkedList());' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED:  hash(key: string) int' },\n  { stage: -1, text: '' },\n  { stage: 1, text: '  get(key) {' },\n  { stage: 2, text: '    const bucketLinkedList = this.buckets[this.hash(key)];' },\n  { stage: 3, text: '    const node = bucketLinkedList.findKey(key);' },\n  { stage: 3, text: '    return node ? node.value : undefined;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 26,\n  problemName: 'Implement **get** in a *HashTable* class.',\n  problemText:\n    'Given a *HashTable* class and an associated *LinkedList* class, implement a **get** method in the *HashTable* class that will retrieve a `value` from the hash table for a given `key`, or `undefined` if the `key` does not exist.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ht=new HashTable();`,\n      evaluate: `Boolean(ht);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'get a key that doesnt exist',\n      inherit: [1],\n      code: ``,\n      evaluate: `ht.get('key1');`,\n      expected: undefined,\n    },\n    {\n      id: 3,\n      name: 'get a key',\n      inherit: [1],\n      code: `ht.set('key1', 99);`,\n      evaluate: `ht.get('key1');`,\n      expected: 99,\n    },\n  ],\n  setupCode: `\n  class LinkedListNode {\n    constructor(key, value, next = null) {\n      this.key = key;\n      this.value = value;\n      this.next = next;\n    }\n  }\n  class LinkedList {\n    constructor() {\n      this.head = null;\n      this.tail = null;\n    }\n    append(key, value) {\n      const newNode = new LinkedListNode(key, value);\n      if (!this.head) {\n        this.head = newNode;\n        this.tail = newNode;\n        return this;\n      }\n      this.tail.next = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    findKey(key) {\n      if (!this.head) {\n        return null;\n      }\n      let current = this.head;\n      while (current) {\n        if (current.key === key) {\n          return current;\n        }\n        current = current.next;\n      }\n      return null;\n    }\n  }\n  HashTable.prototype.hash = function(key) {\n    const hash = Array.from(key).reduce(\n      (hashAccumulator, keySymbol) => hashAccumulator + keySymbol.charCodeAt(0), 0);\n      return hash % this.buckets.length;\n  };\n  HashTable.prototype.set = function(key, value) {\n    const keyHash = this.hash(key);\n    const bucketLinkedList = this.buckets[keyHash];\n    const node = bucketLinkedList.findKey(key);\n    if (!node) {\n      bucketLinkedList.append(key, value);\n    } else {\n      node.value = value;\n    }\n  };\n  `,\n  category: HASH_TABLE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { HASH_TABLE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: -1, text: '// class LinkedList {' },\n  { stage: -1, text: '//   append(key: string, value: any) LinkedList' },\n  { stage: -1, text: '//   findKey(key: string) LinkedListNode' },\n  { stage: -1, text: '//   deleteKey(key: string) LinkedListNode' },\n  { stage: -1, text: '// }' },\n  { stage: -1, text: '//' },\n  { stage: -1, text: '// All code above is implicitly included in your environment' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class HashTable {' },\n  { stage: 0, text: '  constructor(hashTableSize = 32) {' },\n  { stage: 0, text: '    this.buckets = Array(hashTableSize)' },\n  { stage: 0, text: '      .fill(null)' },\n  { stage: 0, text: '      .map(() => new LinkedList());' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED:  hash(key: string) int' },\n  { stage: -1, text: '' },\n  { stage: 1, text: '  delete(key) {' },\n  { stage: 2, text: '    const keyHash = this.hash(key);' },\n  { stage: 2, text: '    const bucketLinkedList = this.buckets[keyHash];' },\n  { stage: 3, text: '    const deletedNode = bucketLinkedList.deleteKey(key);' },\n  { stage: 4, text: '    if (deletedNode) {' },\n  { stage: 4, text: '      return deletedNode.value;' },\n  { stage: 4, text: '    }' },\n  { stage: 3, text: '    return null;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 27,\n  problemName: 'Implement **delete** in a *HashTable* class.',\n  problemText: `Given a *HashTable* class and an associated *LinkedList* class, implement a **delete** method in the *HashTable* class that will delete the entry for a given \\`key\\`.\n  \n  The method must return the value of the deleted item, or \\`null\\` if an item matching the \\`key\\` was not found.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const ht=new HashTable();`,\n      evaluate: `Boolean(ht);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'deleting a key that does not exist returns null',\n      inherit: [1],\n      code: ``,\n      evaluate: `ht.delete('key1');`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'deleting a key that does exist',\n      inherit: [1],\n      code: `ht.set('key1', 77);`,\n      evaluate: `ht.delete('key1');`,\n      expected: 77,\n    },\n  ],\n  setupCode: `\n  class LinkedListNode {\n    constructor(key, value, next = null) {\n      this.key = key;\n      this.value = value;\n      this.next = next;\n    }\n  }\n  class LinkedList {\n    constructor() {\n      this.head = null;\n      this.tail = null;\n    }\n    append(key, value) {\n      const newNode = new LinkedListNode(key, value);\n      if (!this.head) {\n        this.head = newNode;\n        this.tail = newNode;\n        return this;\n      }\n      this.tail.next = newNode;\n      this.tail = newNode;\n      return this;\n    }\n    findKey(key) {\n      if (!this.head) {\n        return null;\n      }\n      let current = this.head;\n      while (current) {\n        if (current.key === key) {\n          return current;\n        }\n        current = current.next;\n      }\n      return null;\n    }\n    deleteKey(key) {\n      if (!this.head) {\n        return null;\n      }\n      if (key === this.head.key) {\n        const deletedHead = this.head;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head = null;\n          this.tail = null;\n        }\n        return deletedHead;\n      } else if (key === this.tail.key) {\n        const deletedTail = this.tail;\n        let currentNode = this.head;\n        while (currentNode.next) {\n          if (!currentNode.next.next) {\n            currentNode.next = null;\n          } else {\n            currentNode = currentNode.next;\n          }\n        }\n        this.tail = currentNode;\n        return deletedTail;\n      } else {\n        let currentNode = this.head;\n        while (currentNode.next) {\n          if (currentNode.next.key === key) {\n            const deletedNode = currentNode.next;\n            currentNode.next = deletedNode.next;\n            return deletedNode;\n          }\n          currentNode = currentNode.next;\n        }\n        return null;\n      }\n    }\n  }\n  HashTable.prototype.hash = function(key) {\n    const hash = Array.from(key).reduce(\n      (hashAccumulator, keySymbol) => hashAccumulator + keySymbol.charCodeAt(0), 0);\n      return hash % this.buckets.length;\n  };\n  HashTable.prototype.set = function(key, value) {\n    const keyHash = this.hash(key);\n    const bucketLinkedList = this.buckets[keyHash];\n    const node = bucketLinkedList.findKey(key);\n    if (!node) {\n      bucketLinkedList.append(key, value);\n    } else {\n      node.value = value;\n    }\n  };\n  HashTable.prototype.get = function(key) {\n    const bucketLinkedList = this.buckets[this.hash(key)];\n    const node = bucketLinkedList.findKey(key);\n    return node ? node.value : undefined;\n  };\n  `,\n  category: HASH_TABLE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 150],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  getLeftChildIndex(parentIndex) {' },\n  { stage: 2, text: '    return 2 * parentIndex + 1;' },\n  { stage: 1, text: '  }' },\n  { stage: 2, text: '' },\n  { stage: 1, text: '  getRightChildIndex(parentIndex) {' },\n  { stage: 3, text: '    return 2 * parentIndex + 2;' },\n  { stage: 1, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 1, text: '  hasLeftChild(parentIndex) {' },\n  { stage: 4, text: '    return this.getLeftChildIndex(parentIndex) < this.heapContainer.length;' },\n  { stage: 1, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 1, text: '  hasRightChild(parentIndex) {' },\n  {\n    stage: 5,\n    text: '    return this.getRightChildIndex(parentIndex) < this.heapContainer.length;',\n  },\n  { stage: 1, text: '  }' },\n  { stage: 5, text: '' },\n  { stage: 1, text: '  leftChild(parentIndex) {' },\n  { stage: 6, text: '    return this.heapContainer[this.getLeftChildIndex(parentIndex)];' },\n  { stage: 1, text: '  }' },\n  { stage: 6, text: '' },\n  { stage: 1, text: '  rightChild(parentIndex) {' },\n  { stage: 7, text: '    return this.heapContainer[this.getRightChildIndex(parentIndex)];' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 28,\n  problemName: `Implement child index functions for a *MinHeap* class.`,\n  problemText: `Implement the following methods for the *MinHeap* data structure:  \n  **getLeftChildIndex** (parentIndex: integer) => integer  \n  **getRightChildIndex** (parentIndex: integer) => integer  \n  **hasLeftChild** (parentIndex: integer) => boolean  \n  **hasRightChild** (parentIndex: integer) => boolean  \n  **leftChild** (parentIndex: integer) => heap value  \n  **rightChild** (parentIndex: integer) => heap value\n`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'getLeftChildIndex - test 0',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getLeftChildIndex(0);`,\n      expected: 1,\n    },\n    {\n      id: 2,\n      name: 'getLeftChildIndex - test 1',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getLeftChildIndex(5);`,\n      expected: 11,\n    },\n    {\n      id: 3,\n      name: 'getRightChildIndex - test 0',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getRightChildIndex(0);`,\n      expected: 2,\n    },\n    {\n      id: 4,\n      name: 'getRightChildIndex - test 1',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getRightChildIndex(12);`,\n      expected: 26,\n    },\n    {\n      id: 5,\n      name: 'hasLeftChild - true',\n      inherit: [1],\n      code: `minheap.heapContainer.length = 10;`,\n      evaluate: `minheap.hasLeftChild(4);`,\n      expected: true,\n    },\n    {\n      id: 6,\n      name: 'hasLeftChild - false',\n      inherit: [1],\n      code: `minheap.heapContainer.length = 9;`,\n      evaluate: `minheap.hasLeftChild(4);`,\n      expected: false,\n    },\n    {\n      id: 7,\n      name: 'hasRightChild - true',\n      inherit: [1],\n      code: `minheap.heapContainer.length = 11;`,\n      evaluate: `minheap.hasRightChild(4);`,\n      expected: true,\n    },\n    {\n      id: 8,\n      name: 'hasRightChild - false',\n      inherit: [1],\n      code: `minheap.heapContainer.length = 10;`,\n      evaluate: `minheap.hasRightChild(4);`,\n      expected: false,\n    },\n    {\n      id: 9,\n      name: 'leftChild',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,4,5,8,10,12,16];`,\n      evaluate: `minheap.leftChild(0);`,\n      expected: 4,\n    },\n    {\n      id: 10,\n      name: 'leftChild',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.leftChild(2);`,\n      expected: 12,\n    },\n    {\n      id: 11,\n      name: 'rightChild',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.rightChild(0);`,\n      expected: 5,\n    },\n    {\n      id: 12,\n      name: 'rightChild',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.rightChild(2);`,\n      expected: 16,\n    },\n  ],\n  setupCode: ``,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  getParentIndex(childIndex) {' },\n  { stage: 2, text: '    return Math.floor((childIndex - 1) / 2);' },\n  { stage: 1, text: '  }' },\n  { stage: 2, text: '' },\n  { stage: 1, text: '  hasParent(childIndex) {' },\n  { stage: 3, text: '    return this.getParentIndex(childIndex) >= 0;' },\n  { stage: 1, text: '  }' },\n  { stage: 3, text: '' },\n  { stage: 1, text: '  parent(childIndex) {' },\n  { stage: 4, text: '    return this.heapContainer[this.getParentIndex(childIndex)];' },\n  { stage: 1, text: '  }' },\n  { stage: 4, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 29,\n  problemName: `Implement parent index functions for a *MinHeap* class.`,\n  problemText: `Implement the following methods for the *MinHeap* data structure:  \n  **getParentIndex** (childIndex: integer) => integer  \n  **hasParent** (childIndex: integer) => boolean  \n  **parent** (childIndex: integer) => heap value  \n`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'getParentIndex - 1',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getParentIndex(1);`,\n      expected: 0,\n    },\n    {\n      id: 3,\n      name: 'getParentIndex - 2',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getParentIndex(2);`,\n      expected: 0,\n    },\n    {\n      id: 4,\n      name: 'getParentIndex - 3',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getParentIndex(5);`,\n      expected: 2,\n    },\n    {\n      id: 5,\n      name: 'getParentIndex - 4',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getParentIndex(6);`,\n      expected: 2,\n    },\n    {\n      id: 6,\n      name: 'getParentIndex - 5',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.getParentIndex(7);`,\n      expected: 3,\n    },\n    {\n      id: 7,\n      name: 'hasParent - 1',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.hasParent(0);`,\n      expected: false,\n    },\n    {\n      id: 8,\n      name: 'hasParent - 2',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.hasParent(1);`,\n      expected: true,\n    },\n    {\n      id: 9,\n      name: 'parent - 1',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,4,5,8,10,12,16];`,\n      evaluate: `minheap.parent(1);`,\n      expected: 1,\n    },\n    {\n      id: 10,\n      name: 'parent - 2',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.parent(2);`,\n      expected: 1,\n    },\n    {\n      id: 11,\n      name: 'parent - 3',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.parent(3);`,\n      expected: 4,\n    },\n    {\n      id: 12,\n      name: 'parent - 4',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.parent(4);`,\n      expected: 4,\n    },\n    {\n      id: 13,\n      name: 'parent - 5',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.parent(5);`,\n      expected: 5,\n    },\n    {\n      id: 14,\n      name: 'parent - 6',\n      inherit: [1, 9],\n      code: ``,\n      evaluate: `minheap.parent(6);`,\n      expected: 5,\n    },\n  ],\n  setupCode: ``,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 150],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  peek() {' },\n  { stage: 2, text: '    if (this.heapContainer.length === 0) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '    return this.heapContainer[0];' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 30,\n  problemName: `Implement the **peek** method for a *MinHeap* class.`,\n  problemText: `Implement a **peek** method that will return the value of the first (next-up) item in a *MinHeap*.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'null if no values in heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [];`,\n      evaluate: `minheap.peek();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'first value - 1',\n      inherit: [1],\n      code: `minheap.heapContainer = [5];`,\n      evaluate: `minheap.peek();`,\n      expected: 5,\n    },\n    {\n      id: 4,\n      name: 'first value - 2',\n      inherit: [1],\n      code: `minheap.heapContainer = [3,7];`,\n      evaluate: `minheap.peek();`,\n      expected: 3,\n    },\n  ],\n  setupCode: ``,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  find(item) {' },\n  { stage: 2, text: '    const foundItemIndices = [];' },\n  {\n    stage: 3,\n    text: '    for (let itemIndex = 0; itemIndex < this.heapContainer.length; itemIndex += 1) {',\n  },\n  { stage: 4, text: '      if (item === this.heapContainer[itemIndex]) {' },\n  { stage: 4, text: '        foundItemIndices.push(itemIndex);' },\n  { stage: 4, text: '      }' },\n  { stage: 3, text: '    }' },\n  { stage: 2, text: '    return foundItemIndices;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 31,\n  problemName: `Implement the **find** method for a *MinHeap* class.`,\n  problemText: `Implement a **find** method for a *MinHeap* that accepts a parameter \\`item\\` and returns an array of indices where matching items are found in the *MinHeap*.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'empty heap',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.find(5);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 3,\n      name: 'one item heap, no match',\n      inherit: [1],\n      code: `minheap.heapContainer = [4];`,\n      evaluate: `minheap.find(5);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 4,\n      name: 'one item heap, match',\n      inherit: [1],\n      code: `minheap.heapContainer = [4];`,\n      evaluate: `minheap.find(4);`,\n      expected: JSON.stringify([0]),\n    },\n    {\n      id: 5,\n      name: 'multi-item heap, no match',\n      inherit: [1],\n      code: `minheap.heapContainer = [4,6,8,10,12];`,\n      evaluate: `minheap.find(7);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 6,\n      name: 'multi-item heap, one match',\n      inherit: [1],\n      code: `minheap.heapContainer = [4,6,8,10,12];`,\n      evaluate: `minheap.find(8);`,\n      expected: JSON.stringify([2]),\n    },\n    {\n      id: 7,\n      name: 'multi-item heap, multiple matches',\n      inherit: [1],\n      code: `minheap.heapContainer = [4,6,8,8,8,10,12];`,\n      evaluate: `minheap.find(8);`,\n      expected: JSON.stringify([2, 3, 4]),\n    },\n  ],\n  setupCode: ``,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 150],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED:  heapifyDown(startIndex: int = 0)' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  poll() {' },\n  { stage: 2, text: '    if (this.heapContainer.length === 0) {' },\n  { stage: 2, text: '      return null;' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 3, text: '    if (this.heapContainer.length === 1) {' },\n  { stage: 3, text: '      return this.heapContainer.pop();' },\n  { stage: 3, text: '    }' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '    const item = this.heapContainer[0];' },\n  { stage: 4, text: '' },\n  { stage: 5, text: '    this.heapContainer[0] = this.heapContainer.pop();' },\n  { stage: 5, text: '    this.heapifyDown();' },\n  { stage: 4, text: '    return item;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 32,\n  problemName: `Implement **poll** for a *MinHeap* class.`,\n  problemText: `Implement a **poll** method for a *MinHeap* to remove and return the item at the top of the heap.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'empty list',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.poll();`,\n      expected: null,\n    },\n    {\n      id: 3,\n      name: 'list, return top item',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,2,4,6,3,5,6,10,8,7];`,\n      evaluate: `minheap.poll();`,\n      expected: 1,\n    },\n    {\n      id: 4,\n      name: 'list, correct 2nd item',\n      inherit: [1, 3],\n      code: `minheap.poll();`,\n      evaluate: `minheap.poll();`,\n      expected: 2,\n    },\n    {\n      id: 5,\n      name: 'list, correct 3rd item',\n      inherit: [1, 3, 4],\n      code: `minheap.poll();`,\n      evaluate: `minheap.poll();`,\n      expected: 3,\n    },\n    {\n      id: 6,\n      name: 'list, correct 4th item',\n      inherit: [1, 3, 4, 5],\n      code: `minheap.poll();`,\n      evaluate: `minheap.poll();`,\n      expected: 4,\n    },\n    {\n      id: 7,\n      name: 'list, correct 5th item',\n      inherit: [1, 3, 4, 5, 6],\n      code: `minheap.poll();`,\n      evaluate: `minheap.poll();`,\n      expected: 5,\n    },\n  ],\n  setupCode: `\n  MinHeap.prototype.getLeftChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 1;\n  };\n  MinHeap.prototype.getRightChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 2;\n  };\n  MinHeap.prototype.hasLeftChild = function(parentIndex) {\n    return this.getLeftChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.hasRightChild = function(parentIndex) {\n    return this.getRightChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.leftChild = function(parentIndex) {\n    return this.heapContainer[this.getLeftChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.rightChild = function(parentIndex) {\n    return this.heapContainer[this.getRightChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.heapifyDown = function (customStartIndex = 0) {\n    let currentIndex = customStartIndex;\n    let nextIndex = null;\n    while (this.hasLeftChild(currentIndex)) {\n      if (\n        this.hasRightChild(currentIndex) &&\n        this.rightChild(currentIndex) <= this.leftChild(currentIndex)\n      ) {\n        nextIndex = this.getRightChildIndex(currentIndex);\n      } else {\n        nextIndex = this.getLeftChildIndex(currentIndex);\n      }\n      if (this.heapContainer[currentIndex] <= this.heapContainer[nextIndex]) {\n        break;\n      }\n      this.swap(currentIndex, nextIndex);\n      currentIndex = nextIndex;\n    }\n  };\n  MinHeap.prototype.swap = function (indexOne, indexTwo) {\n    const tmp = this.heapContainer[indexTwo];\n    this.heapContainer[indexTwo] = this.heapContainer[indexOne];\n    this.heapContainer[indexOne] = tmp;\n  };\n  `,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED:  heapifyUp()' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  add(item) {' },\n  { stage: 2, text: '    this.heapContainer.push(item);' },\n  { stage: 3, text: '    this.heapifyUp();' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 33,\n  problemName: `Implement **add** for a *MinHeap* class.`,\n  problemText: `Implement an **add** method for a *MinHeap* to receive an \\`item\\` (integer) and add it to the heap.  The method should then return the heap.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'add item to empty heap',\n      inherit: [1],\n      code: `minheap.add(5);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([5]),\n    },\n    {\n      id: 3,\n      name: 'add 2nd item to heap',\n      inherit: [1, 2],\n      code: `minheap.add(6);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([5, 6]),\n    },\n    {\n      id: 4,\n      name: 'add 3rd item to heap',\n      inherit: [1, 2, 3],\n      code: `minheap.add(3);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([3, 6, 5]),\n    },\n    {\n      id: 5,\n      name: 'add 4th item to heap',\n      inherit: [1, 2, 3, 4],\n      code: `minheap.add(8);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([3, 6, 5, 8]),\n    },\n    {\n      id: 6,\n      name: 'add 5th item to heap',\n      inherit: [1, 2, 3, 4, 5],\n      code: `minheap.add(1);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 3, 5, 8, 6]),\n    },\n    {\n      id: 7,\n      name: 'add 6th item to heap',\n      inherit: [1, 2, 3, 4, 5, 6],\n      code: `minheap.add(4);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 3, 4, 8, 6, 5]),\n    },\n    {\n      id: 8,\n      name: 'add 7th item to heap',\n      inherit: [1, 2, 3, 4, 5, 6, 7],\n      code: `minheap.add(2);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 3, 2, 8, 6, 5, 4]),\n    },\n    {\n      id: 9,\n      name: 'method should return itself',\n      inherit: [1, 2, 3, 4, 5, 6, 7],\n      code: ``,\n      evaluate: `minheap.add(2) === minheap`,\n      expected: true,\n    },\n  ],\n  setupCode: `\n  MinHeap.prototype.getParentIndex = function (childIndex) {\n    return Math.floor((childIndex - 1) / 2);\n  };\n  MinHeap.prototype.hasParent = function (childIndex) {\n    return this.getParentIndex(childIndex) >= 0;\n  };\n  MinHeap.prototype.parent = function (childIndex) {\n    return this.heapContainer[this.getParentIndex(childIndex)];\n  };\n  MinHeap.prototype.heapifyUp = function (customStartIndex) {\n    let currentIndex = customStartIndex || this.heapContainer.length - 1;\n    while (\n      this.hasParent(currentIndex) &&\n      this.parent(currentIndex) > this.heapContainer[currentIndex]\n    ) {\n      this.swap(currentIndex, this.getParentIndex(currentIndex));\n      currentIndex = this.getParentIndex(currentIndex);\n    }\n  };\n  MinHeap.prototype.swap = function (indexOne, indexTwo) {\n    const tmp = this.heapContainer[indexTwo];\n    this.heapContainer[indexTwo] = this.heapContainer[indexOne];\n    this.heapContainer[indexOne] = tmp;\n  };\n  `,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED:  heapifyUp(index: int)' },\n  { stage: -1, text: '// IMPLEMENTED:  heapifyDown(index: int)' },\n  { stage: -1, text: '// IMPLEMENTED:  find(item: int) []index:int' },\n  { stage: -1, text: '// IMPLEMENTED:  parent(index: int) item:int' },\n  { stage: -1, text: '// IMPLEMENTED:  hasLeftChild(index: int) bool' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  remove(item) {' },\n  { stage: 2, text: '    const numberOfItemsToRemove = this.find(item).length;' },\n  { stage: 2, text: '' },\n  {\n    stage: 3,\n    text: '    for (let iteration = 0; iteration < numberOfItemsToRemove; iteration += 1) {',\n  },\n  { stage: 4, text: '      const indexToRemove = this.find(item).pop();' },\n  { stage: 4, text: '      if (indexToRemove === this.heapContainer.length - 1) {' },\n  { stage: 5, text: '        this.heapContainer.pop();' },\n  { stage: 4, text: '      } else {' },\n  { stage: 5, text: '        this.heapContainer[indexToRemove] = this.heapContainer.pop();' },\n  { stage: 5, text: '        const parentItem = this.parent(indexToRemove);' },\n  { stage: 6, text: '' },\n  { stage: 6, text: '        if (' },\n  { stage: 6, text: '          this.hasLeftChild(indexToRemove) &&' },\n  { stage: 6, text: '          (!parentItem || parentItem <= this.heapContainer[indexToRemove])' },\n  { stage: 6, text: '        ) {' },\n  { stage: 7, text: '          this.heapifyDown(indexToRemove);' },\n  { stage: 6, text: '        } else {' },\n  { stage: 8, text: '          this.heapifyUp(indexToRemove);' },\n  { stage: 6, text: '        }' },\n  { stage: 4, text: '      }' },\n  { stage: 3, text: '    }' },\n  { stage: 2, text: '    return this;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 34,\n  problemName: `Implement **remove** for a *MinHeap* class.`,\n  problemText: `Implement a **remove** method for a *MinHeap* to receive an \\`item\\` (integer) and remove all instances of that item from the heap.  The method should then return the heap.\n  \n  (note: remove duplicate items from back to front)`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'remove from empty heap, remains empty heap',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.remove(5);JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 3,\n      name: 'remove from empty heap, returns empty heap',\n      inherit: [1],\n      code: ``,\n      evaluate: `minheap.remove(5) === minheap;`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'remove one from one item heap, heap becomes empty',\n      inherit: [1],\n      code: `minheap.heapContainer = [5];minheap.remove(5);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 5,\n      name: 'remove one from two item heap, one item remains',\n      inherit: [1],\n      code: `minheap.heapContainer = [5,6];minheap.remove(5);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([6]),\n    },\n    {\n      id: 6,\n      name: 'remove value from two item heap where value is duplicated',\n      inherit: [1],\n      code: `minheap.heapContainer = [5,5];minheap.remove(5);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([]),\n    },\n    {\n      id: 7,\n      name: 'complex example',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,2,4,6,3,5,6,10,8,7];minheap.remove(5).remove(6);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 2, 4, 10, 3, 7, 8]),\n    },\n  ],\n  setupCode: `\n  MinHeap.prototype.getParentIndex = function (childIndex) {\n    return Math.floor((childIndex - 1) / 2);\n  };\n  MinHeap.prototype.hasParent = function (childIndex) {\n    return this.getParentIndex(childIndex) >= 0;\n  };\n  MinHeap.prototype.parent = function (childIndex) {\n    return this.heapContainer[this.getParentIndex(childIndex)];\n  };\n  MinHeap.prototype.getLeftChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 1;\n  };\n  MinHeap.prototype.getRightChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 2;\n  };\n  MinHeap.prototype.hasLeftChild = function(parentIndex) {\n    return this.getLeftChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.hasRightChild = function(parentIndex) {\n    return this.getRightChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.leftChild = function(parentIndex) {\n    return this.heapContainer[this.getLeftChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.rightChild = function(parentIndex) {\n    return this.heapContainer[this.getRightChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.find = function (item) {\n    const foundItemIndices = [];\n    for (let itemIndex = 0; itemIndex < this.heapContainer.length; itemIndex += 1) {\n      if (item === this.heapContainer[itemIndex]) {\n        foundItemIndices.push(itemIndex);\n      }\n    }\n    return foundItemIndices;\n  };\n  MinHeap.prototype.heapifyUp = function (customStartIndex) {\n    let currentIndex = customStartIndex || this.heapContainer.length - 1;\n    while (\n      this.hasParent(currentIndex) &&\n      this.parent(currentIndex) > this.heapContainer[currentIndex]\n    ) {\n      this.swap(currentIndex, this.getParentIndex(currentIndex));\n      currentIndex = this.getParentIndex(currentIndex);\n    }\n  };\n  MinHeap.prototype.heapifyDown = function (customStartIndex = 0) {\n    let currentIndex = customStartIndex;\n    let nextIndex = null;\n    while (this.hasLeftChild(currentIndex)) {\n      if (\n        this.hasRightChild(currentIndex) &&\n        this.rightChild(currentIndex) <= this.leftChild(currentIndex)\n      ) {\n        nextIndex = this.getRightChildIndex(currentIndex);\n      } else {\n        nextIndex = this.getLeftChildIndex(currentIndex);\n      }\n      if (this.heapContainer[currentIndex] <= this.heapContainer[nextIndex]) {\n        break;\n      }\n      this.swap(currentIndex, nextIndex);\n      currentIndex = nextIndex;\n    }\n  };\n  MinHeap.prototype.swap = function (indexOne, indexTwo) {\n    const tmp = this.heapContainer[indexTwo];\n    this.heapContainer[indexTwo] = this.heapContainer[indexOne];\n    this.heapContainer[indexOne] = tmp;\n  };\n  `,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 270],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED:  swap(index1: int, index2: int)' },\n  { stage: -1, text: '// IMPLEMENTED:  getParentIndex(index: int) int' },\n  { stage: -1, text: '// IMPLEMENTED:  hasParent(index: int) bool' },\n  { stage: -1, text: '// IMPLEMENTED:  parent(index: int) int' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  heapifyUp(customStartIndex) {' },\n  { stage: 2, text: '    let currentIndex = customStartIndex || this.heapContainer.length - 1;' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    while (' },\n  { stage: 3, text: '      this.hasParent(currentIndex) &&' },\n  { stage: 3, text: '      (this.parent(currentIndex) > this.heapContainer[currentIndex])' },\n  { stage: 3, text: '    ) {' },\n  { stage: 4, text: '      this.swap(currentIndex, this.getParentIndex(currentIndex));' },\n  { stage: 5, text: '      currentIndex = this.getParentIndex(currentIndex);' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 35,\n  problemName: `Implement **heapifyUp** for a *MinHeap* class.`,\n  problemText: `Implement a **heapifyUp** method for a *MinHeap* to take an array item at a specified \\`index\\` (the last index in the array by default) and move it up to the correct placement in the heap.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'heapifyUp on one item heap, remains same',\n      inherit: [1],\n      code: `minheap.heapContainer = [5];minheap.heapifyUp();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([5]),\n    },\n    {\n      id: 3,\n      name: 'heapifyUp on two item heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [5,4];minheap.heapifyUp(1);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([4, 5]),\n    },\n    {\n      id: 4,\n      name: 'heapifyUp on three item heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [5,6,4];minheap.heapifyUp(2);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([4, 6, 5]),\n    },\n    {\n      id: 5,\n      name: 'heapifyUp on four item heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [4,6,5,3];minheap.heapifyUp(3);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([3, 4, 5, 6]),\n    },\n    {\n      id: 6,\n      name: 'heapifyUp on complex heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [2,3,5,7,4,6,7,11,9,8,1];minheap.heapifyUp(10);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 2, 5, 7, 3, 6, 7, 11, 9, 8, 4]),\n    },\n    {\n      id: 7,\n      name: 'by default, works on last item in heap',\n      inherit: [1],\n      code: `minheap.heapContainer = [2,3,5,7,4,6,7,11,9,8,1];minheap.heapifyUp();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 2, 5, 7, 3, 6, 7, 11, 9, 8, 4]),\n    },\n  ],\n  setupCode: `\n  MinHeap.prototype.getParentIndex = function (childIndex) {\n    return Math.floor((childIndex - 1) / 2);\n  };\n  MinHeap.prototype.hasParent = function (childIndex) {\n    return this.getParentIndex(childIndex) >= 0;\n  };\n  MinHeap.prototype.parent = function (childIndex) {\n    return this.heapContainer[this.getParentIndex(childIndex)];\n  };\n  MinHeap.prototype.swap = function (indexOne, indexTwo) {\n    const tmp = this.heapContainer[indexTwo];\n    this.heapContainer[indexTwo] = this.heapContainer[indexOne];\n    this.heapContainer[indexOne] = tmp;\n  };\n  `,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { HEAP, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class MinHeap {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.heapContainer = [];' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED:  swap(index1: int, index2: int)' },\n  { stage: -1, text: '// IMPLEMENTED:  getLeftChildIndex(index: int) int' },\n  { stage: -1, text: '// IMPLEMENTED:  getRightChildIndex(index: int) int' },\n  { stage: -1, text: '// IMPLEMENTED:  hasLeftChild(index: int) bool' },\n  { stage: -1, text: '// IMPLEMENTED:  hasRightChild(index: int) bool' },\n  { stage: -1, text: '// IMPLEMENTED:  getLeftChildIndex(index: int) int' },\n  { stage: -1, text: '// IMPLEMENTED:  getrightChildIndex(index: int) int' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  heapifyDown(customStartIndex = 0) {' },\n  { stage: 2, text: '    let currentIndex = customStartIndex;' },\n  { stage: 2, text: '    let nextIndex = null;' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    while (this.hasLeftChild(currentIndex)) {' },\n  { stage: 4, text: '      if (' },\n  { stage: 4, text: '        this.hasRightChild(currentIndex) &&' },\n  { stage: 4, text: '        this.rightChild(currentIndex) <= this.leftChild(currentIndex)' },\n  { stage: 4, text: '      ) {' },\n  { stage: 5, text: '        nextIndex = this.getRightChildIndex(currentIndex);' },\n  { stage: 4, text: '      } else {' },\n  { stage: 5, text: '        nextIndex = this.getLeftChildIndex(currentIndex);' },\n  { stage: 4, text: '      }' },\n  { stage: 5, text: '' },\n  {\n    stage: 6,\n    text: '      if (this.heapContainer[currentIndex] <= this.heapContainer[nextIndex]) {',\n  },\n  { stage: 6, text: '        break;' },\n  { stage: 6, text: '      }' },\n  { stage: 6, text: '' },\n  { stage: 7, text: '      this.swap(currentIndex, nextIndex);' },\n  { stage: 7, text: '      currentIndex = nextIndex;' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 36,\n  problemName: `Implement **heapifyDown** for a *MinHeap* class.`,\n  problemText: `Implement a **heapifyDown** method for a *MinHeap* to take an array item at a specified \\`index\\` (the first item in the array by default) and move it down to the correct placement in the heap.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const minheap=new MinHeap();`,\n      evaluate: `Boolean(minheap);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'one item in heap, heap is same',\n      inherit: [1],\n      code: `minheap.heapContainer = [1];  minheap.heapifyDown();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1]),\n    },\n    {\n      id: 3,\n      name: 'two items in heap, no change',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,2];  minheap.heapifyDown();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 2]),\n    },\n    {\n      id: 4,\n      name: 'two items in heap, reorder',\n      inherit: [1],\n      code: `minheap.heapContainer = [2,1];  minheap.heapifyDown();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 2]),\n    },\n    {\n      id: 5,\n      name: 'five items in heap, reorder',\n      inherit: [1],\n      code: `minheap.heapContainer = [5,1,2,3,4];  minheap.heapifyDown();`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 3, 2, 5, 4]),\n    },\n    {\n      id: 6,\n      name: 'five items in heap, specific index',\n      inherit: [1],\n      code: `minheap.heapContainer = [1,5,2,3,4];  minheap.heapifyDown(1);`,\n      evaluate: `JSON.stringify(minheap.heapContainer);`,\n      expected: JSON.stringify([1, 3, 2, 5, 4]),\n    },\n  ],\n  setupCode: `\n  MinHeap.prototype.getLeftChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 1;\n  };\n  MinHeap.prototype.getRightChildIndex = function(parentIndex) {\n    return 2 * parentIndex + 2;\n  };\n  MinHeap.prototype.hasLeftChild = function(parentIndex) {\n    return this.getLeftChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.hasRightChild = function(parentIndex) {\n    return this.getRightChildIndex(parentIndex) < this.heapContainer.length;\n  };\n  MinHeap.prototype.leftChild = function(parentIndex) {\n    return this.heapContainer[this.getLeftChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.rightChild = function(parentIndex) {\n    return this.heapContainer[this.getRightChildIndex(parentIndex)];\n  };\n  MinHeap.prototype.swap = function (indexOne, indexTwo) {\n    const tmp = this.heapContainer[indexTwo];\n    this.heapContainer[indexTwo] = this.heapContainer[indexOne];\n    this.heapContainer[indexOne] = tmp;\n  };\n  `,\n  category: HEAP,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  insert(value) {' },\n  { stage: 2, text: '    const thisNode = new BinarySearchTreeNode(value);' },\n  { stage: 3, text: '    if (!this.root) {' },\n  { stage: 4, text: '      this.root = thisNode;' },\n  { stage: 3, text: '    } else {' },\n  { stage: 4, text: '      let currentRoot = this.root;' },\n  { stage: 4, text: '      while (true) {' },\n  { stage: 5, text: '        if (currentRoot.value > value) {' },\n  { stage: 6, text: '          if (currentRoot.left != null) {' },\n  { stage: 7, text: '            currentRoot = currentRoot.left;' },\n  { stage: 6, text: '          } else {' },\n  { stage: 7, text: '            currentRoot.left = thisNode;' },\n  { stage: 7, text: '            break;' },\n  { stage: 6, text: '          }' },\n  { stage: 5, text: '        } else if (currentRoot.value < value) {' },\n  { stage: 8, text: '          if (currentRoot.right != null) {' },\n  { stage: 9, text: '            currentRoot = currentRoot.right;' },\n  { stage: 8, text: '          } else {' },\n  { stage: 9, text: '            currentRoot.right = thisNode;' },\n  { stage: 9, text: '            break;' },\n  { stage: 8, text: '          }' },\n  { stage: 5, text: '        } else {' },\n  { stage: 9, text: '          break;' },\n  { stage: 5, text: '        }' },\n  { stage: 4, text: '      }' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 37,\n  problemName: 'Implement **insert** in a *BinarySearchTree* class.',\n  problemText:\n    'Write an **insert** method in a *BinarySearchTree* class that accepts a `value` (integer) and inserts it at the proper place in the tree.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'Insert value into empty tree.',\n      inherit: [1],\n      code: `tree.insert(5);`,\n      evaluate: `tree.root.value;`,\n      expected: 5,\n    },\n    {\n      id: 3,\n      name: 'Insert 2nd value.',\n      inherit: [1, 2],\n      code: `tree.insert(7);`,\n      evaluate: `tree.root.right.value;`,\n      expected: 7,\n    },\n    {\n      id: 4,\n      name: 'Insert 3rd value.',\n      inherit: [1, 2, 3],\n      code: `tree.insert(6);`,\n      evaluate: `tree.root.right.left.value;`,\n      expected: 6,\n    },\n    {\n      id: 5,\n      name: 'Insert 4th value.',\n      inherit: [1, 2, 3, 4],\n      code: `tree.insert(1);`,\n      evaluate: `tree.root.left.value;`,\n      expected: 1,\n    },\n    {\n      id: 6,\n      name: 'Insert 5th value.',\n      inherit: [1, 2, 3, 4, 5],\n      code: `tree.insert(2);`,\n      evaluate: `tree.root.left.right.value;`,\n      expected: 2,\n    },\n  ],\n  setupCode: '',\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 240, 300],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  search(value) {' },\n  { stage: 2, text: '    let currentRoot = this.root;' },\n  { stage: 2, text: '    let found = false;' },\n  { stage: 3, text: '    while (currentRoot) {' },\n  { stage: 4, text: '      if (currentRoot.value > value) {' },\n  { stage: 5, text: '        currentRoot = currentRoot.left;' },\n  { stage: 4, text: '      } else if (currentRoot.value < value) {' },\n  { stage: 5, text: '        currentRoot = currentRoot.right;' },\n  { stage: 4, text: '      } else {' },\n  { stage: 6, text: '        found = true;' },\n  { stage: 6, text: '        break;' },\n  { stage: 4, text: '      }' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '    return found;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 38,\n  problemName: 'Implement **search** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **search** method in a *BinarySearchTree* class that accepts a `value` (integer) and returns a boolean `true` or `false` indicating whether that integer is found within the tree.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'search an empty tree returns false',\n      inherit: [1],\n      code: ``,\n      evaluate: `tree.search(5);`,\n      expected: false,\n    },\n    {\n      id: 3,\n      name: 'search a tree finds value',\n      inherit: [1],\n      code: `tree.insert(5);`,\n      evaluate: `tree.search(5);`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'search a tree does not find value',\n      inherit: [1],\n      code: `tree.insert(5);`,\n      evaluate: `tree.search(2);`,\n      expected: false,\n    },\n    {\n      id: 5,\n      name: 'complex tree, found (1)',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(7);tree.insert(6);tree.insert(1);tree.insert(2);`,\n      evaluate: `tree.search(6);`,\n      expected: true,\n    },\n    {\n      id: 6,\n      name: 'complex tree, found (2)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `tree.search(1);`,\n      expected: true,\n    },\n    {\n      id: 7,\n      name: 'complex tree, not found (1)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `tree.search(8);`,\n      expected: false,\n    },\n    {\n      id: 8,\n      name: 'complex tree, not found (2)',\n      inherit: [1, 5],\n      code: ``,\n      evaluate: `tree.search(4);`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  delete(value) {' },\n  { stage: 2, text: '    this.root = deleteRecursively(this.root, value);' },\n  { stage: 2, text: '' },\n  { stage: 2, text: '    function deleteRecursively(root, value) {' },\n  { stage: 3, text: '      if (!root) {' },\n  { stage: 4, text: '        return null;' },\n  { stage: 3, text: '      } else if (value < root.value) {' },\n  { stage: 4, text: '        root.left = deleteRecursively(root.left, value);' },\n  { stage: 3, text: '      } else if (value > root.value) {' },\n  { stage: 5, text: '        root.right = deleteRecursively(root.right, value);' },\n  { stage: 3, text: '      } else {' },\n  { stage: 6, text: '        if (!root.left && !root.right) {' },\n  { stage: 7, text: '          return null;' },\n  { stage: 6, text: '        } else if (!root.left) {' },\n  { stage: 7, text: '          root = root.right;' },\n  { stage: 7, text: '          return root;' },\n  { stage: 6, text: '        } else if (!root.right) {' },\n  { stage: 8, text: '          root = root.left;' },\n  { stage: 8, text: '          return root;' },\n  { stage: 6, text: '        } else {' },\n  { stage: 8, text: '          const temp = findMin(root.right);' },\n  { stage: 10, text: '          root.value = temp.value;' },\n  { stage: 10, text: '          root.right = deleteRecursively(root.right, temp.value);' },\n  { stage: 10, text: '          return root;' },\n  { stage: 6, text: '        }' },\n  { stage: 3, text: '      }' },\n  { stage: 5, text: '      return root;' },\n  { stage: 2, text: '    }' },\n  { stage: 9, text: '' },\n  { stage: 8, text: '    function findMin(root) {' },\n  { stage: 9, text: '      while (root.left) {' },\n  { stage: 9, text: '        root = root.left;' },\n  { stage: 9, text: '      }' },\n  { stage: 9, text: '      return root;' },\n  { stage: 8, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 39,\n  problemName: 'Implement **delete** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **delete** method in a *BinarySearchTree* class that accepts an integer `value` and deletes it from a tree, while maintaining a valid Binary Search Tree structure.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'delete on empty tree, no crash',\n      inherit: [1],\n      code: `tree.delete(5);`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 3,\n      name: 'insert an item into tree.  delete it. find it.',\n      inherit: [1],\n      code: `tree.insert(5);tree.delete(5);`,\n      evaluate: `tree.search(5);`,\n      expected: false,\n    },\n    {\n      id: 4,\n      name: 'insert two items into tree.  delete one. find the other.',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(6);tree.delete(5);`,\n      evaluate: `tree.search(6);`,\n      expected: true,\n    },\n    {\n      id: 5,\n      name: 'find the deleted of task #4.',\n      inherit: [1, 4],\n      code: ``,\n      evaluate: `tree.search(5);`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  BinarySearchTree.prototype.search = function(value) {\n    let currentRoot = this.root;\n    let found = false;\n    while (currentRoot) {\n      if (currentRoot.value > value) {\n        currentRoot = currentRoot.left;\n      } else if (currentRoot.value < value) {\n        currentRoot = currentRoot.right;\n      } else {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 330],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traversePreOrderIterative(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    const nodeStack = [];' },\n  { stage: 1, text: '    nodeStack.push(node);' },\n  { stage: 1, text: '' },\n  { stage: 2, text: '    while (nodeStack.length) {' },\n  { stage: 3, text: '      let next = nodeStack.pop();' },\n  { stage: 3, text: '      callback(next.value);' },\n  { stage: 4, text: '      if (next.right) {' },\n  { stage: 4, text: '        nodeStack.push(next.right);' },\n  { stage: 4, text: '      }' },\n  { stage: 5, text: '      if (next.left) {' },\n  { stage: 5, text: '        nodeStack.push(next.left);' },\n  { stage: 5, text: '      }' },\n  { stage: 2, text: '    }' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 40,\n  problemName: 'Implement **traversePreOrderIterative** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traversePreOrderIterative** method in a *BinarySearchTree* Class that traverses a tree iteratively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper pre-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traversePreOrderIterative();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([5, 3, 0, 2, 11, 7]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traversePreOrderRecursive(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    if (!node) {' },\n  { stage: 1, text: '      return;' },\n  { stage: 1, text: '    }' },\n  { stage: 2, text: '    callback(node.value);' },\n  { stage: 3, text: '    this.traversePreOrderRecursive(node.left);' },\n  { stage: 3, text: '    this.traversePreOrderRecursive(node.right);' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 41,\n  problemName: 'Implement **traversePreOrderRecursive** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traversePreOrderRecursive** method in a *BinarySearchTree* class that traverses a tree recursively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper pre-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traversePreOrderRecursive();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([5, 3, 0, 2, 11, 7]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traverseInOrderIterative(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    let stack = [];' },\n  { stage: 1, text: '    let done = false;' },\n  { stage: 1, text: '' },\n  { stage: 2, text: '    while (!done) {' },\n  { stage: 3, text: '      if (node != null) {' },\n  { stage: 4, text: '        stack.push(node);' },\n  { stage: 4, text: '        node = node.left;' },\n  { stage: 3, text: '      } else {' },\n  { stage: 5, text: '        if (stack.length) {' },\n  { stage: 6, text: '          node = stack.pop();' },\n  { stage: 6, text: '          callback(node.value);' },\n  { stage: 7, text: '          node = node.right;' },\n  { stage: 5, text: '        } else {' },\n  { stage: 7, text: '          done = true;' },\n  { stage: 5, text: '        }' },\n  { stage: 3, text: '      }' },\n  { stage: 2, text: '    }' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 42,\n  problemName: 'Implement **traverseInOrderIterative** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traverseInOrderIterative** method in a *BinarySearchTree* class that traverses a tree iteratively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper in-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traverseInOrderIterative();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([0, 2, 3, 5, 7, 11]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traverseInOrderRecursive(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    if (!node) {' },\n  { stage: 1, text: '      return;' },\n  { stage: 1, text: '    }' },\n  { stage: 2, text: '    this.traverseInOrderRecursive(node.left);' },\n  { stage: 2, text: '    callback(node.value);' },\n  { stage: 3, text: '    this.traverseInOrderRecursive(node.right);' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 43,\n  problemName: 'Implement **traverseInOrderRecursive** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traverseInOrderRecursive** method in a *BinarySearchTree* class that traverses a tree recursively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper in-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traverseInOrderRecursive();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([0, 2, 3, 5, 7, 11]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traversePostOrderIterative(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    const s1 = [];' },\n  { stage: 1, text: '    const s2 = [];' },\n  { stage: 1, text: '    s1.push(node);' },\n  { stage: 1, text: '' },\n  { stage: 2, text: '    while (s1.length) {' },\n  { stage: 3, text: '      const next = s1.pop();' },\n  { stage: 3, text: '      s2.push(next);' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '      if (next.left) {' },\n  { stage: 4, text: '        s1.push(next.left);' },\n  { stage: 4, text: '      }' },\n  { stage: 5, text: '      if (next.right) {' },\n  { stage: 5, text: '        s1.push(next.right);' },\n  { stage: 5, text: '      }' },\n  { stage: 2, text: '    }' },\n  { stage: 6, text: '    while (s2.length) {' },\n  { stage: 7, text: '      const next = s2.pop();' },\n  { stage: 7, text: '      callback(next.value);' },\n  { stage: 6, text: '    }' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 44,\n  problemName: 'Implement **traversePostOrderIterative** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traversePostOrderIterative** method in a *BinarySearchTree* class that traverses a tree iteratively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper post-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traversePostOrderIterative();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([2, 0, 3, 7, 11, 5]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 240],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '// IMPLEMENTED  callback(value)' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  traversePostOrderRecursive(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    if (node.left) {' },\n  { stage: 1, text: '      this.traversePostOrderRecursive(node.left);' },\n  { stage: 1, text: '    }' },\n  { stage: 2, text: '    if (node.right) {' },\n  { stage: 2, text: '      this.traversePostOrderRecursive(node.right);' },\n  { stage: 2, text: '    }' },\n  { stage: 3, text: '    callback(node.value);' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 45,\n  problemName: 'Implement **traversePostOrderRecursive** in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traversePostOrderRecursive** method in a *BinarySearchTree* class that traverses a tree recursively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper post-order ranking',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traversePostOrderRecursive();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([2, 0, 3, 7, 11, 5]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { BINARY_SEARCH_TREE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class BinarySearchTreeNode {' },\n  { stage: 0, text: '  constructor(value) {' },\n  { stage: 0, text: '    this.value = value;' },\n  { stage: 0, text: '    this.left = null;' },\n  { stage: 0, text: '    this.right = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class BinarySearchTree {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = null;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '  traverseLevelOrderBfs(node = this.root, callback = this.callback) {' },\n  { stage: 1, text: '    const queue = [];' },\n  { stage: 1, text: '    if (!node) {' },\n  { stage: 1, text: '      return;' },\n  { stage: 1, text: '    }' },\n  { stage: 2, text: '    queue.push(node);' },\n  { stage: 2, text: '    while (queue.length) {' },\n  { stage: 3, text: '      const temp = queue.shift();' },\n  { stage: 3, text: '      callback(temp.value);' },\n  { stage: 4, text: '      if (temp.left) {' },\n  { stage: 4, text: '        queue.push(temp.left);' },\n  { stage: 4, text: '      }' },\n  { stage: 5, text: '      if (temp.right) {' },\n  { stage: 5, text: '        queue.push(temp.right);' },\n  { stage: 5, text: '      }' },\n  { stage: 2, text: '    }' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 46,\n  problemName: 'Implement a **traverseLevelOrderBfs** method in a *BinarySearchTree* class.',\n  problemText:\n    'Write a **traverseLevelOrderBfs** method in a *BinarySearchTree* class that traverses a tree iteratively and runs the supplied `callback` function on each node value.',\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const tree=new BinarySearchTree();`,\n      evaluate: `Boolean(tree);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'proper bfs',\n      inherit: [1],\n      code: `tree.insert(5);tree.insert(3);tree.insert(11);tree.insert(0);tree.insert(7);tree.insert(2);tree.traverseLevelOrderBfs();`,\n      evaluate: `JSON.stringify(tree.tempNodeList);`,\n      expected: JSON.stringify([5, 3, 11, 0, 7, 2]),\n    },\n  ],\n  setupCode: `\n  BinarySearchTree.prototype.tempNodeList = [];\n  BinarySearchTree.prototype.callback = function (value) {\n    BinarySearchTree.prototype.tempNodeList.push(value);\n  };\n  BinarySearchTree.prototype.clearTempNodeList = function (value) {\n    BinarySearchTree.prototype.tempNodeList = [];\n  };\n  BinarySearchTree.prototype.insert = function(value) {\n    const thisNode = new BinarySearchTreeNode(value);\n    if (!this.root) {\n      this.root = thisNode;\n    } else {\n      let currentRoot = this.root;\n      while (true) {\n        if (currentRoot.value > value) {\n          if (currentRoot.left != null) {\n            currentRoot = currentRoot.left;\n          } else {\n            currentRoot.left = thisNode;\n            break;\n          }\n        } else if (currentRoot.value < value) {\n          if (currentRoot.right != null) {\n            currentRoot = currentRoot.right;\n          } else {\n            currentRoot.right = thisNode;\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  };\n  `,\n  category: BINARY_SEARCH_TREE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  addVertex(key) {' },\n  { stage: 2, text: '    const vertex = new Vertex(key);' },\n  { stage: 2, text: '    this.vertices[key] = vertex;' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (!this.adjList[key]) {' },\n  { stage: 3, text: '      this.adjList[key] = {};' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 47,\n  problemName: `Implement the **addVertex** method for a *Graph* class.`,\n  problemText: `Implement an **addVertex** method that accepts a string \\`vertex\\` key, with no return value.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'add single vertex, check vertices inventory',\n      inherit: [1],\n      code: `graph.addVertex('A');`,\n      evaluate: `graph.vertices['A'].key;`,\n      expected: 'A',\n    },\n    {\n      id: 3,\n      name: 'adds single vertex, check adjacency list',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `JSON.stringify(graph.adjList['A']);`,\n      expected: JSON.stringify({}),\n    },\n  ],\n  setupCode: '',\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED: addVertex(key: string) void' },\n  { stage: -1, text: '' },\n  { stage: 1, text: '  addEdge(startVertexKey, endVertexKey, edgeWeight = 1) {' },\n  { stage: 2, text: '    if (!this.vertices[startVertexKey]) {' },\n  { stage: 2, text: '      this.addVertex(startVertexKey);' },\n  { stage: 2, text: '    }' },\n  { stage: 2, text: '' },\n  { stage: 3, text: '    if (!this.vertices[endVertexKey]) {' },\n  { stage: 3, text: '      this.addVertex(endVertexKey);' },\n  { stage: 3, text: '    }' },\n  { stage: 3, text: '' },\n  { stage: 4, text: '    const edge = new Edge(edgeWeight);' },\n  { stage: 4, text: '' },\n  { stage: 4, text: '    this.adjList[startVertexKey][endVertexKey] = edge;' },\n  { stage: 4, text: '' },\n  { stage: 5, text: '    if (!this.isDirected) {' },\n  { stage: 5, text: '      this.adjList[endVertexKey][startVertexKey] = edge;' },\n  { stage: 5, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 48,\n  problemName: `Implement the **addEdge** method for a *Graph* class.`,\n  problemText: `Implement an **addEdge** method that accepts a \\`startingVertex\\` key (string) and an \\`endingVertex\\` key (string) and an optional \\`edgeWeight\\` (int, defaults to 1), with no return value.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'creates vertices if they do not exist - start',\n      inherit: [1],\n      code: `graph.addEdge('A', 'B', 2);`,\n      evaluate: `Boolean(graph.vertices['A']);`,\n      expected: true,\n    },\n    {\n      id: 3,\n      name: 'creates vertices if they do not exist - end',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `Boolean(graph.vertices['B']);`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'sets the proper edge weight',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `graph.adjList['A']['B'].weight;`,\n      expected: 2,\n    },\n    {\n      id: 5,\n      name: 'defaults to 1 if edge weight is not given',\n      inherit: [1],\n      code: `graph.addEdge('A', 'B');`,\n      evaluate: `graph.adjList['A']['B'].weight;`,\n      expected: 1,\n    },\n    {\n      id: 6,\n      name: 'creates reverse path if not a directed network',\n      inherit: [],\n      code: `const graph=new Graph(false);graph.addEdge('A', 'B', 2);`,\n      evaluate: `graph.adjList['B']['A'].weight;`,\n      expected: 2,\n    },\n  ],\n  setupCode: `\n  Graph.prototype.addVertex = function (key) {\n    const vertex = new Vertex(key);\n    this.vertices[key] = vertex;\n    if (!this.adjList[key]) {\n      this.adjList[key] = {};\n    }\n  };\n  `,\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteVertex(vertexKey) {' },\n  { stage: 2, text: '    delete this.vertices[vertexKey];' },\n  { stage: 2, text: '    delete this.adjList[vertexKey];' },\n  { stage: 3, text: '    for (let key of Object.keys(this.adjList)) {' },\n  { stage: 4, text: '      for (let vk of Object.keys(this.adjList[key])) {' },\n  { stage: 5, text: '        if (vk === vertexKey) {' },\n  { stage: 5, text: '          delete this.adjList[key][vk];' },\n  { stage: 5, text: '        }' },\n  { stage: 4, text: '      }' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 49,\n  problemName: `Implement the **deleteVertex** method for a *Graph* class.`,\n  problemText: `Implement a **deleteVertex** method that accepts a \\`vertexKey\\` (string), with no return value.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'add, then delete vertex',\n      inherit: [1],\n      code: `graph.addVertex('A');graph.deleteVertex('A');`,\n      evaluate: `Boolean(graph.vertices['A']);`,\n      expected: false,\n    },\n    {\n      id: 3,\n      name: 'add edge, make sure vertex is deleted from AdjList',\n      inherit: [1],\n      code: `graph.addEdge('A','B');graph.deleteVertex('A');`,\n      evaluate: `graph.adjList['A'] === undefined;`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'removed from reverse side of AdjList',\n      inherit: [],\n      code: `const graph=new Graph(false);graph.addEdge('A','B');graph.deleteVertex('A');`,\n      evaluate: `JSON.stringify(graph.adjList['B']);`,\n      expected: JSON.stringify({}),\n    },\n  ],\n  setupCode: `\n  Graph.prototype.addVertex = function(key) {\n    const vertex = new Vertex(key);\n    this.vertices[key] = vertex;\n    if (!this.adjList[key]) {\n      this.adjList[key] = {};\n    }\n  };\n  Graph.prototype.addEdge = function(startVertexKey, endVertexKey, edgeWeight = 1) {\n    if (!this.vertices[startVertexKey]) {\n      this.addVertex(startVertexKey);\n    }\n    if (!this.vertices[endVertexKey]) {\n      this.addVertex(endVertexKey);\n    }\n    const edge = new Edge(edgeWeight);\n    this.adjList[startVertexKey][endVertexKey] = edge;\n    if (!this.isDirected) {\n      this.adjList[endVertexKey][startVertexKey] = edge;\n    }\n  };\n  `,\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  deleteEdge(startVertexKey, endVertexKey) {' },\n  { stage: 2, text: '    delete this.adjList[startVertexKey][endVertexKey];' },\n  { stage: 3, text: '    if (!this.isDirected) {' },\n  { stage: 3, text: '      delete this.adjList[endVertexKey][startVertexKey];' },\n  { stage: 3, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 50,\n  problemName: `Implement the **deleteEdge** method for a *Graph* class.`,\n  problemText: `Implement a **deleteEdge** method that accepts a \\`startingVertex\\` key (string) and an \\`endingVertex\\` key (string), with no return value.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'add edge, then delete. Check edge.',\n      inherit: [1],\n      code: `graph.addEdge('A', 'B');graph.deleteEdge('A', 'B');`,\n      evaluate: `Boolean(graph.adjList['A'] && graph.adjList['A']['B']);`,\n      expected: false,\n    },\n    {\n      id: 2,\n      name: 'add edge, then delete. Check reverse edge on undirected graph.',\n      inherit: [],\n      code: `const graph=new Graph(false);graph.addEdge('A', 'B');graph.deleteEdge('A', 'B');`,\n      evaluate: `Boolean(graph.adjList['B'] && graph.adjList['B']['A']);`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  Graph.prototype.addVertex = function(key) {\n    const vertex = new Vertex(key);\n    this.vertices[key] = vertex;\n    if (!this.adjList[key]) {\n      this.adjList[key] = {};\n    }\n  };\n  Graph.prototype.addEdge = function(startVertexKey, endVertexKey, edgeWeight = 1) {\n    if (!this.vertices[startVertexKey]) {\n      this.addVertex(startVertexKey);\n    }\n    if (!this.vertices[endVertexKey]) {\n      this.addVertex(endVertexKey);\n    }\n    const edge = new Edge(edgeWeight);\n    this.adjList[startVertexKey][endVertexKey] = edge;\n    if (!this.isDirected) {\n      this.adjList[endVertexKey][startVertexKey] = edge;\n    }\n  };\n  `,\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 120],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED: callback(vertex: Vertex) void' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  dfs(startVertexKey, callback = this.callback) {' },\n  { stage: 1, text: '    const visited = {};' },\n  { stage: 1, text: '' },\n  { stage: 2, text: '    const traverseDfs = vertex => {' },\n  { stage: 3, text: '      visited[vertex] = true;' },\n  { stage: 3, text: '      callback(vertex);' },\n  { stage: 4, text: '      for (let adjacent of Object.keys(this.adjList[vertex] || [])) {' },\n  { stage: 5, text: '        if (!visited[adjacent]) {' },\n  { stage: 5, text: '          traverseDfs(adjacent);' },\n  { stage: 5, text: '        }' },\n  { stage: 4, text: '      }' },\n  { stage: 2, text: '    };' },\n  { stage: 6, text: '' },\n  { stage: 6, text: '    traverseDfs(startVertexKey);' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 51,\n  problemName: `Implement a **dfs** (depth first search) method for a *Graph* class.`,\n  problemText: `Implement a **dfs** method that accepts a \\`startingVertex\\` key (string) and a \\`callback\\` function (supplied) to be run on each graph node.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'dfs network 1',\n      inherit: [1],\n      code: `graph.addEdge('42', '41');graph.addEdge('42', '50');graph.addEdge('41', '10');graph.addEdge('41', '40');graph.addEdge('50', '45');graph.addEdge('50', '75');graph.dfs('42');`,\n      evaluate: `JSON.stringify(graph.tempSet);`,\n      expected: JSON.stringify(['42', '41', '10', '40', '50', '45', '75']),\n    },\n    {\n      id: 3,\n      name: 'dfs network 2',\n      inherit: [1],\n      code: `graph.addEdge('A', 'B');graph.addEdge('B', 'C');graph.addEdge('B', 'E');graph.addEdge('C', 'D');graph.addEdge('D', 'G');graph.addEdge('D', 'F');graph.addEdge('G', 'H');graph.addEdge('F', 'J');graph.dfs('A');`,\n      evaluate: `JSON.stringify(graph.tempSet);`,\n      expected: JSON.stringify(['A', 'B', 'C', 'D', 'G', 'H', 'F', 'J', 'E']),\n    },\n  ],\n  setupCode: `\n  Graph.prototype.tempSet = [];\n  Graph.prototype.callback = function(key) {\n    Graph.prototype.tempSet.push(key);\n  };\n  Graph.prototype.addVertex = function(key) {\n    const vertex = new Vertex(key);\n    this.vertices[key] = vertex;\n    if (!this.adjList[key]) {\n      this.adjList[key] = {};\n    }\n  };\n  Graph.prototype.addEdge = function(startVertexKey, endVertexKey, edgeWeight = 1) {\n    if (!this.vertices[startVertexKey]) {\n      this.addVertex(startVertexKey);\n    }\n    if (!this.vertices[endVertexKey]) {\n      this.addVertex(endVertexKey);\n    }\n\n    const edge = new Edge(edgeWeight);\n\n    this.adjList[startVertexKey][endVertexKey] = edge;\n\n    if (!this.isDirected) {\n      this.adjList[endVertexKey][startVertexKey] = edge;\n    }\n  };\n  `,\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { GRAPH, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class Vertex {' },\n  { stage: 0, text: '  constructor(key) {' },\n  { stage: 0, text: '    this.key = key;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Edge {' },\n  { stage: 0, text: '  constructor(weight) {' },\n  { stage: 0, text: '    this.weight = weight;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Graph {' },\n  { stage: 0, text: '  constructor(isDirected = true) {' },\n  { stage: 0, text: '    this.isDirected = isDirected === true;' },\n  { stage: 0, text: '    this.adjList = {};' },\n  { stage: 0, text: '    this.vertices = {};' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: -1, text: '  // IMPLEMENTED: callback(vertex: Vertex) void' },\n  { stage: -1, text: '' },\n  { stage: 0, text: '  bfs(startVertexKey, callback = this.callback) {' },\n  { stage: 1, text: '    const queue = [];' },\n  { stage: 1, text: '    const visited = {};' },\n  { stage: 1, text: '    queue.push(startVertexKey);' },\n  { stage: 1, text: '' },\n  { stage: 2, text: '    while (queue.length) {' },\n  { stage: 3, text: '      const vertexKey = queue.shift();' },\n  { stage: 3, text: '      if (!visited[vertexKey]) {' },\n  { stage: 4, text: '        callback(vertexKey);' },\n  { stage: 4, text: '        visited[vertexKey] = true;' },\n  { stage: 5, text: '        for (let adjacent of Object.keys(this.adjList[vertexKey] || {})) {' },\n  { stage: 5, text: '          queue.push(adjacent);' },\n  { stage: 5, text: '        }' },\n  { stage: 3, text: '      }' },\n  { stage: 2, text: '    }' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 52,\n  problemName: `Implement a **bfs** (breadth first search) method for a *Graph* class.`,\n  problemText: `Implement a **bfs** method that accepts a \\`startingVertex\\` key (string) and a \\`callback\\` function (supplied) to be run on each graph node.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const graph=new Graph();`,\n      evaluate: `Boolean(graph);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'bfs network 1',\n      inherit: [1],\n      code: `graph.addEdge('42', '41');graph.addEdge('42', '50');graph.addEdge('41', '10');graph.addEdge('41', '40');graph.addEdge('50', '45');graph.addEdge('50', '75');graph.bfs('42');`,\n      evaluate: `JSON.stringify(graph.tempSet);`,\n      expected: JSON.stringify(['42', '41', '50', '10', '40', '45', '75']),\n    },\n    {\n      id: 3,\n      name: 'bfs network 2',\n      inherit: [1],\n      code: `graph.addEdge('A', 'B');graph.addEdge('B', 'C');graph.addEdge('B', 'E');graph.addEdge('C', 'D');graph.addEdge('D', 'G');graph.addEdge('D', 'F');graph.addEdge('G', 'H');graph.addEdge('F', 'J');graph.bfs('A');`,\n      evaluate: `JSON.stringify(graph.tempSet);`,\n      expected: JSON.stringify(['A', 'B', 'C', 'E', 'D', 'G', 'F', 'H', 'J']),\n    },\n  ],\n  setupCode: `\n  Graph.prototype.tempSet = [];\n  Graph.prototype.callback = function(key) {\n    Graph.prototype.tempSet.push(key);\n  };\n  Graph.prototype.addVertex = function(key) {\n    const vertex = new Vertex(key);\n    this.vertices[key] = vertex;\n    if (!this.adjList[key]) {\n      this.adjList[key] = {};\n    }\n  };\n  Graph.prototype.addEdge = function(startVertexKey, endVertexKey, edgeWeight = 1) {\n    if (!this.vertices[startVertexKey]) {\n      this.addVertex(startVertexKey);\n    }\n    if (!this.vertices[endVertexKey]) {\n      this.addVertex(endVertexKey);\n    }\n\n    const edge = new Edge(edgeWeight);\n\n    this.adjList[startVertexKey][endVertexKey] = edge;\n\n    if (!this.isDirected) {\n      this.adjList[endVertexKey][startVertexKey] = edge;\n    }\n  };\n  `,\n  category: GRAPH,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { TRIE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class TrieNode {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.children = {};' },\n  { stage: 0, text: '    this.endOfWord = false;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Trie {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = new TrieNode();' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  insert(word) {' },\n  { stage: 2, text: '    let current = this.root;' },\n  { stage: 2, text: '    for (let i = 0; i < word.length; i++) {' },\n  { stage: 3, text: '      const ch = word.charAt(i);' },\n  { stage: 3, text: '      let node = current.children[ch];' },\n  { stage: 4, text: '      if (node == null) {' },\n  { stage: 5, text: '        node = new TrieNode();' },\n  { stage: 5, text: '        current.children[ch] = node;' },\n  { stage: 4, text: '      }' },\n  { stage: 6, text: '      current = node;' },\n  { stage: 2, text: '    }' },\n  { stage: 6, text: '    current.endOfWord = true;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 53,\n  problemName: `Implement the **insert** method for a *Trie* class.`,\n  problemText: `Implement an **insert** method that takes a \\`word\\` (string) as a parameter, with no return value.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const trie=new Trie();`,\n      evaluate: `Boolean(trie);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'insert word, search true',\n      inherit: [1],\n      code: `trie.insert('daniel');`,\n      evaluate: `trie.search('daniel');`,\n      expected: true,\n    },\n    {\n      id: 3,\n      name: 'insert word, search half of that word.  return false',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `trie.search('dan');`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  Trie.prototype.search = function(word) {\n    let current = this.root;\n    for (let i = 0; i < word.length; i++) {\n      const ch = word.charAt(i);\n      const node = current.children[ch];\n      if (node == null) {\n        return false;\n      }\n      current = node;\n    }\n    return current.endOfWord;\n  };\n  `,\n  category: TRIE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 210],\n    solutionLines: solution,\n  },\n};\n","import { TRIE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class TrieNode {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.children = {};' },\n  { stage: 0, text: '    this.endOfWord = false;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Trie {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = new TrieNode();' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  search(word) {' },\n  { stage: 2, text: '    let current = this.root;' },\n  { stage: 2, text: '    for (let i = 0; i < word.length; i++) {' },\n  { stage: 3, text: '      const ch = word.charAt(i);' },\n  { stage: 3, text: '      const node = current.children[ch];' },\n  { stage: 4, text: '      if (node == null) {' },\n  { stage: 4, text: '        return false;' },\n  { stage: 4, text: '      }' },\n  { stage: 5, text: '      current = node;' },\n  { stage: 2, text: '    }' },\n  { stage: 5, text: '    return current.endOfWord;' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 54,\n  problemName: `Implement the **search** method for a *Trie* class.`,\n  problemText: `Implement a **search** method that takes in a \\`word\\` (string) and returns a boolean \\`true\\` or \\`false\\` depending on if it can be found in the Trie.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const trie=new Trie();`,\n      evaluate: `Boolean(trie);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'nothing in trie should return false on search',\n      inherit: [1],\n      code: ``,\n      evaluate: `trie.search('');`,\n      expected: false,\n    },\n    {\n      id: 3,\n      name: 'insert word, search true',\n      inherit: [1],\n      code: `trie.insert('daniel');`,\n      evaluate: `trie.search('daniel');`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'insert word, search half of that word.  return false',\n      inherit: [1, 3],\n      code: ``,\n      evaluate: `trie.search('dan');`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  Trie.prototype.insert = function(word) {\n    let current = this.root;\n    for (let i = 0; i < word.length; i++) {\n      const ch = word.charAt(i);\n      let node = current.children[ch];\n      if (node == null) {\n        node = new TrieNode();\n        current.children[ch] = node;\n      }\n      current = node;\n    }\n    current.endOfWord = true;\n  };\n  `,\n  category: TRIE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 180],\n    solutionLines: solution,\n  },\n};\n","import { TRIE, DATA_STRUCTURE, BEGINNER } from '../constants.js';\n\nconst solution = [\n  { stage: 0, text: 'class TrieNode {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.children = {};' },\n  { stage: 0, text: '    this.endOfWord = false;' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n  { stage: 0, text: 'class Trie {' },\n  { stage: 0, text: '  constructor() {' },\n  { stage: 0, text: '    this.root = new TrieNode();' },\n  { stage: 0, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 1, text: '  delete(word) {' },\n  { stage: 2, text: '    deleteRecursively(this.root, word, 0);' },\n  { stage: 2, text: '' },\n  { stage: 2, text: '    function deleteRecursively(current, word, index) {' },\n  { stage: 3, text: '      if (index === word.length) {' },\n  { stage: 4, text: '        if (!current.endOfWord) {' },\n  { stage: 4, text: '          return false;' },\n  { stage: 4, text: '        }' },\n  { stage: 5, text: '        current.endOfWord = false;' },\n  { stage: 5, text: '        return Object.keys(current.children).length === 0;' },\n  { stage: 3, text: '      }' },\n  { stage: 6, text: '      const ch = word.charAt(index);' },\n  { stage: 6, text: '      const node = current.children[ch];' },\n  { stage: 7, text: '      if (node == null) {' },\n  { stage: 7, text: '        return false;' },\n  { stage: 7, text: '      }' },\n  { stage: 8, text: '      const shouldDelete = deleteRecursively(node, word, index + 1);' },\n  { stage: 8, text: '      if (shouldDelete) {' },\n  { stage: 9, text: '        delete current.children[ch];' },\n  { stage: 9, text: '        return Object.keys(current.children).length === 0;' },\n  { stage: 8, text: '      }' },\n  { stage: 9, text: '      return false;' },\n  { stage: 2, text: '    }' },\n  { stage: 1, text: '  }' },\n  { stage: 0, text: '' },\n  { stage: 0, text: '}' },\n  { stage: 0, text: '' },\n];\n\nexport const data = {\n  problemID: 55,\n  problemName: `Implement the **delete** method for a *Trie* class.`,\n  problemText: `Implement a **delete** method that takes in a \\`word\\` (string) and removes it from the Trie.`,\n  testCases: [\n    {\n      id: 1,\n      name: 'compiles',\n      inherit: [],\n      code: `const trie=new Trie();`,\n      evaluate: `Boolean(trie);`,\n      expected: true,\n    },\n    {\n      id: 2,\n      name: 'insert, delete.  search is false.',\n      inherit: [1],\n      code: `trie.insert('daniel');trie.insert('david');trie.delete('daniel');`,\n      evaluate: `trie.search('daniel');`,\n      expected: false,\n    },\n    {\n      id: 3,\n      name: 'insert, delete.  search for non-deleted is true.',\n      inherit: [1, 2],\n      code: ``,\n      evaluate: `trie.search('david');`,\n      expected: true,\n    },\n    {\n      id: 4,\n      name: 'delete remaining word.  search should be false.',\n      inherit: [1, 2],\n      code: `trie.delete('david');`,\n      evaluate: `trie.search('david');`,\n      expected: false,\n    },\n  ],\n  setupCode: `\n  Trie.prototype.insert = function(word) {\n    let current = this.root;\n    for (let i = 0; i < word.length; i++) {\n      const ch = word.charAt(i);\n      let node = current.children[ch];\n      if (node == null) {\n        node = new TrieNode();\n        current.children[ch] = node;\n      }\n      current = node;\n    }\n    current.endOfWord = true;\n  };\n  Trie.prototype.search = function(word) {\n    let current = this.root;\n    for (let i = 0; i < word.length; i++) {\n      const ch = word.charAt(i);\n      const node = current.children[ch];\n      if (node == null) {\n        return false;\n      }\n      current = node;\n    }\n    return current.endOfWord;\n  };\n  `,\n  category: TRIE,\n  type: DATA_STRUCTURE,\n  difficulty: BEGINNER,\n  maxExecutionTime: 2,\n  solution: {\n    stages: [0, 30, 60, 90, 120, 150, 180, 210, 240, 300],\n    solutionLines: solution,\n  },\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState: {\n    value: '',\n    value2: '',\n    results: [],\n    revealButtonPressed: false,\n    isBusyTesting: false,\n    activeIndex: 0,\n    totalSeconds: 0,\n    isRunning: false,\n    open: false,\n    noteCode: '',\n    tableSort: 'id', // id | fail | success\n    sessionHistory: [],\n  },\n  reducers: {\n    setValue: (state, { type, payload }) => {\n      state.value = payload;\n    },\n    setValue2: (state, { type, payload }) => {\n      state.value2 = payload;\n    },\n    setResults: (state, { type, payload }) => {\n      state.results = payload;\n    },\n    setRevealButtonPressed: (state, { type, payload }) => {\n      state.revealButtonPressed = payload;\n    },\n    setIsBusyTesting: (state, { type, payload }) => {\n      state.setIsBusyTesting = payload;\n    },\n    setActiveIndex: (state, { type, payload }) => {\n      state.activeIndex = payload;\n    },\n    setTotalSeconds: (state, { type, payload }) => {\n      state.totalSeconds = payload;\n    },\n    setOpen: (state, { type, payload }) => {\n      state.open = payload;\n    },\n    setNoteCode: (state, { type, payload }) => {\n      state.noteCode = payload;\n    },\n    updateTableSort: (state, { type, payload }) => {\n      state.tableSort = payload;\n    },\n    setSessionHistory: (state, { type, payload }) => {\n      state.sessionHistory = payload;\n    },\n    incrementTotalSeconds: (state, { type, payload }) => {\n      state.totalSeconds = state.totalSeconds + 1;\n    },\n    setIsRunning: (state, { type, payload }) => {\n      state.isRunning = payload;\n    },\n    startRunningTests: (state, { type, payload }) => {\n      state.results = [];\n      state.activeIndex = 1;\n      state.isBusyTesting = true;\n    },\n    concludeRunningTests: (state, { type, payload }) => {\n      const { r, entry } = payload;\n      state.results = r;\n      state.isBusyTesting = false;\n      if (r.every(d => d.ok) && !state.revealButtonPressed) {\n        state.isRunning = false;\n        state.sessionHistory.push(entry);\n        state.revealButtonPressed = true;\n      }\n    },\n    clickNextToResults: (state, { type, payload }) => {\n      state.totalSeconds = 0;\n      state.isRunning = false;\n      state.revealButtonPressed = false;\n      state.activeIndex = 0;\n      state.value = '';\n      state.results = [];\n    },\n    clickSkipToResults: (state, { type, payload }) => {\n      const id = payload;\n      if (!state.revealButtonPressed) {\n        state.sessionHistory.push({ id, seconds: null });\n      }\n      state.totalSeconds = 0;\n      state.isRunning = false;\n      state.revealButtonPressed = false;\n      state.activeIndex = 0;\n      state.value = '';\n      state.results = [];\n    },\n    clickNext: (state, { type, payload }) => {\n      state.totalSeconds = 0;\n      state.isRunning = true;\n      state.revealButtonPressed = false;\n      state.activeIndex = 0;\n      state.value = '';\n      state.results = [];\n    },\n    clickSkip: (state, { type, payload }) => {\n      const id = payload;\n      if (!state.revealButtonPressed) {\n        state.sessionHistory.push({ id, seconds: null });\n      }\n      state.totalSeconds = 0;\n      state.isRunning = true;\n      state.revealButtonPressed = false;\n      state.activeIndex = 0;\n      state.value = '';\n      state.results = [];\n    },\n    revealAnswer: (state, { type, payload }) => {\n      const { id, data } = payload;\n      state.revealButtonPressed = true;\n      state.isRunning = false;\n      state.sessionHistory.push({ id, seconds: null });\n      // code to reveal\n      state.value2 = data.solution.solutionLines\n        .map(line => {\n          return line.text;\n        })\n        .join('\\n');\n    },\n  },\n});\n\nexport const {\n  setValue,\n  setValue2,\n  setResults,\n  setRevealButtonPressed,\n  setIsBusyTesting,\n  setActiveIndex,\n  setTotalSeconds,\n  setOpen,\n  setNoteCode,\n  updateTableSort,\n  setSessionHistory,\n  incrementTotalSeconds,\n  setIsRunning,\n  startRunningTests,\n  concludeRunningTests,\n  clickNextToResults,\n  clickSkipToResults,\n  clickNext,\n  clickSkip,\n  revealAnswer,\n} = gameSlice.actions;\n\nexport const gameReducer = gameSlice.reducer;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.645b15e5.worker.js\");\n}\n","// deal with personalBests in LocalStorage\n\nconst PERSONAL_BESTS = 'personalBests';\n\nexport function submitResult(entry) {\n  // entry: {id: 1, seconds:90}\n  try {\n    const personalBestsRaw = localStorage.getItem(PERSONAL_BESTS);\n    const personalBests = JSON.parse(personalBestsRaw);\n    if (!personalBests) {\n      throw new Error('Need to populate initial data.');\n    }\n    const previousBest = personalBests[entry.id];\n    if (!previousBest || entry.seconds < previousBest) {\n      personalBests[entry.id] = entry.seconds;\n      localStorage.setItem(PERSONAL_BESTS, JSON.stringify(personalBests));\n    }\n  } catch (err) {\n    // okay to ignore error\n    const personalBests = {};\n    personalBests[entry.id] = entry.seconds;\n    localStorage.setItem(PERSONAL_BESTS, JSON.stringify(personalBests));\n  }\n}\n\nexport function getPersonalBests() {\n  try {\n    const personalBestsRaw = localStorage.getItem(PERSONAL_BESTS);\n    const personalBests = JSON.parse(personalBestsRaw);\n    if (!personalBests) {\n      throw new Error('Need to populate initial data.');\n    }\n    return personalBests;\n  } catch (err) {\n    // okay to ignore error\n    const personalBests = {};\n    localStorage.setItem(PERSONAL_BESTS, JSON.stringify(personalBests));\n    return personalBests;\n  }\n}\n","import { getPersonalBests } from './personalBests.js';\n\nexport function constructTest(testCases, inherit, code, evaluate) {\n  let test = ';';\n\n  for (let idRef of inherit) {\n    const foundCase = testCases.find(d => d.id === idRef);\n    if (foundCase) {\n      test += foundCase.code;\n    } else {\n      console.error(`Could not find testCase id: ${idRef}`);\n    }\n  }\n\n  test += code + evaluate;\n  return test;\n}\n\nexport function convertToSeconds(hours, minutes, seconds) {\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\nexport function convertToTimer(secondsRaw) {\n  if (!secondsRaw) {\n    return `00:00:00`;\n  }\n  const { hours, minutes, seconds } = convertToHoursMinutesSeconds(secondsRaw);\n  return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(\n    seconds,\n  ).padStart(2, '0')}`;\n}\n\nexport function convertToHoursMinutesSeconds(seconds) {\n  let hours = 0;\n  let minutes = 0;\n\n  if (seconds > 3600) {\n    hours = Math.floor(seconds / 3600);\n    seconds = seconds % 3600;\n  }\n\n  if (seconds > 60) {\n    minutes = Math.floor(seconds / 60);\n    seconds = seconds % 60;\n  }\n\n  return { hours, minutes, seconds };\n}\n\nexport function colorCodeTime(totalSeconds, data, revealButtonPressed, passedAllTests) {\n  const personalBests = getPersonalBests();\n  const personalBest = personalBests[data.problemID];\n\n  let color = 'green';\n\n  if (personalBest && totalSeconds > personalBest) {\n    color = 'blue';\n  }\n\n  const lastStageSeconds = data.solution.stages[data.solution.stages.length - 1];\n\n  if (totalSeconds > lastStageSeconds || revealButtonPressed) {\n    color = 'red';\n  }\n\n  if (passedAllTests) {\n    color = 'green';\n  }\n\n  return color;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from 'worker-loader!../worker';\nimport { submitResult } from '../personalBests.js';\nimport { constructTest } from '../util.js';\nimport { inventory } from '../data/inventory';\nimport { startRunningTests, concludeRunningTests } from './gameStore.js';\n\nexport const clickRun = createAsyncThunk('', async (id, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const value = state.game.value;\n  const data = inventory[id];\n\n  thunkAPI.dispatch(startRunningTests());\n\n  // for each test\n  const promisedResults = data.testCases.map(async test => {\n    // run sandbox code in a worker\n    const worker = new Worker();\n    const obj = Comlink.wrap(worker);\n    let error = '';\n    const response = obj\n      .evaluate(\n        value +\n          data.setupCode +\n          constructTest(data.testCases, test.inherit, test.code, test.evaluate),\n      )\n      .catch(e => {\n        error = e.message;\n      });\n    const timeout = new Promise((resolve, reject) => {\n      setTimeout(reject, data.maxExecutionTime * 1000, new Error('Timeout'));\n    }).catch(e => {\n      error = e.message;\n    });\n    const val = await Promise.race([response, timeout]);\n    obj[Comlink.releaseProxy]();\n    worker.terminate();\n\n    // update test result\n    let representation = '';\n    if (typeof val === 'object' && val != null) {\n      representation = JSON.stringify(val);\n    } else {\n      representation = val;\n    }\n\n    // determine if actual === expected\n    const ok = test.expected === representation;\n\n    // format for display in table\n    const presentation =\n      typeof representation !== 'string' ? JSON.stringify(representation) : representation;\n\n    return { ...test, actual: presentation, error, ok };\n  });\n\n  await Promise.all(promisedResults).then(r => {\n    const entry = { id, seconds: state.game.totalSeconds };\n    thunkAPI.dispatch(concludeRunningTests({ r, entry }));\n    submitResult(entry);\n  });\n});\n","import * as React from 'react';\nimport AceEditor from 'react-ace';\nimport prettier from 'prettier/esm/standalone.mjs';\nimport parserBabel from 'prettier/esm/parser-babel.mjs';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setValue } from '../redux/gameStore.js';\nimport { clickRun } from '../redux/thunks.js';\nimport { useParams } from 'react-router-dom';\n\nfunction EditorMain() {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.game.value);\n\n  const editor1 = React.useRef();\n  const propsRef = React.useRef({});\n  const { id } = useParams();\n  propsRef.current.id = id;\n\n  const onChange = val => {\n    dispatch(setValue(val));\n    editor1.current.editor.resize();\n  };\n\n  return (\n    <div\n      style={{ padding: '1vh 1vw', width: '48.5vw', backgroundColor: 'ivory', borderRadius: '5px' }}\n    >\n      <AceEditor\n        ref={editor1}\n        placeholder={'Enter text here...'}\n        mode=\"javascript\"\n        theme=\"dawn\"\n        name=\"editor1\"\n        onChange={onChange}\n        value={value}\n        width={'47vw'}\n        height={'59vh'}\n        showGutter={true}\n        highlightActiveLine={true}\n        wrapEnabled={true}\n        setOptions={{\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n        commands={[\n          {\n            name: 'prettier',\n            bindKey: { win: 'Ctrl-S', mac: 'Cmd-S' },\n            exec: editor => {\n              try {\n                const formatted = prettier.format(editor.session.getValue(), {\n                  parser: 'babel',\n                  plugins: [parserBabel],\n                });\n                dispatch(setValue(formatted));\n              } catch (err) {\n                console.log('There was an error in compilation.');\n              }\n            },\n          },\n          {\n            name: 'run tests',\n            bindKey: { win: 'Ctrl-M', mac: 'Cmd-M' },\n            exec: async () => {\n              try {\n                await dispatch(clickRun(propsRef.current.id));\n              } catch (err) {\n                console.log('Encountered an error when attempting to run tests.');\n              }\n            },\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default EditorMain;\n","import * as React from 'react';\nimport AceEditor from 'react-ace';\nimport { useSelector } from 'react-redux';\n\nfunction EditorSecondary() {\n  const value2 = useSelector(state => state.game.value2);\n  const editor2 = React.useRef();\n\n  const onChange2 = () => {\n    editor2.current.editor.resize();\n  };\n\n  return (\n    <div\n      style={{ padding: '1vh 1vw', width: '48.5vw', backgroundColor: 'ivory', borderRadius: '5px' }}\n    >\n      <AceEditor\n        ref={editor2}\n        placeholder=\"No suggestions...\"\n        mode=\"javascript\"\n        theme=\"github\"\n        width={'47vw'}\n        height={'59vh'}\n        name=\"editor2\"\n        readOnly={true}\n        showGutter={true}\n        onChange={onChange2}\n        value={value2}\n        highlightActiveLine={false}\n        wrapEnabled={true}\n        setOptions={{\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EditorSecondary;\n","import * as React from 'react';\nimport { Modal, Button } from 'semantic-ui-react';\nimport hljs from 'highlight.js/lib/core';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'highlight.js/styles/github.css';\nimport { setOpen } from '../redux/gameStore';\n\nhljs.registerLanguage('javascript', javascript);\n\nfunction TestCodeModal() {\n  const dispatch = useDispatch();\n  const open = useSelector(state => state.game.open);\n  const noteCode = useSelector(state => state.game.noteCode);\n\n  return (\n    <Modal\n      onClose={() => dispatch(setOpen(false))}\n      onOpen={() => dispatch(setOpen(true))}\n      open={open}\n    >\n      <Modal.Header>Test Code</Modal.Header>\n      <Modal.Content>\n        <div\n          style={{ whiteSpace: 'pre' }}\n          dangerouslySetInnerHTML={{ __html: hljs.highlight('javascript', noteCode).value }}\n        ></div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button style={{ width: '138px' }} onClick={() => dispatch(setOpen(false))}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default TestCodeModal;\n","import * as React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport { constructTest } from '../util.js';\nimport { inventory } from '../data/inventory.js';\nimport prettier from 'prettier/esm/standalone.mjs';\nimport parserBabel from 'prettier/esm/parser-babel.mjs';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { setOpen, setNoteCode, updateTableSort } from '../redux/gameStore';\nimport TestCodeModal from './TestCodeModal';\n\nfunction TestCaseTable() {\n  const dispatch = useDispatch();\n  const results = useSelector(state => state.game.results);\n  const tableSort = useSelector(state => state.game.tableSort);\n  const { id } = useParams();\n\n  const sortedResults = [...results].sort((a, b) => {\n    if (tableSort === 'id') {\n      return a.id - b.id;\n    } else if (tableSort === 'fail') {\n      let aValue = a.ok ? a.id + 10000 : a.id;\n      let bValue = b.ok ? b.id + 10000 : b.id;\n      return aValue - bValue;\n    } else if (tableSort === 'success') {\n      let aValue = a.ok ? a.id : a.id + 10000;\n      let bValue = b.ok ? b.id : b.id + 10000;\n      return aValue - bValue;\n    } else {\n      throw new Error(`Invalid sort choice: ${tableSort}`);\n    }\n  });\n\n  const nextSort = () => {\n    if (tableSort === 'id') {\n      dispatch(updateTableSort('fail'));\n    } else if (tableSort === 'fail') {\n      dispatch(updateTableSort('success'));\n    } else if (tableSort === 'success') {\n      dispatch(updateTableSort('id'));\n    } else {\n      throw new Error(`Invalid sort choice: ${tableSort}`);\n    }\n  };\n\n  if (!sortedResults.length) {\n    return null;\n  }\n\n  const data = inventory[id];\n\n  return (\n    <div>\n      <TestCodeModal />\n\n      <Table celled compact={'very'} className=\"run-results\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell style={{ textAlign: 'center' }}>ID</Table.HeaderCell>\n            <Table.HeaderCell style={{ textAlign: 'center' }}>Code</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n            <Table.HeaderCell>Expected</Table.HeaderCell>\n            <Table.HeaderCell>Actual</Table.HeaderCell>\n            <Table.HeaderCell>Error</Table.HeaderCell>\n            <Table.HeaderCell onClick={nextSort} style={{ textAlign: 'center', cursor: 'pointer' }}>\n              Status\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {sortedResults.map(test => {\n            return (\n              <Table.Row\n                key={test.id}\n                style={{\n                  backgroundColor: test.ok ? 'rgba(0, 255, 0, 0.3)' : 'rgba(255, 0, 0, 0.3)',\n                }}\n              >\n                <Table.Cell style={{ textAlign: 'center' }}>{test.id}</Table.Cell>\n                <Table.Cell style={{ textAlign: 'center' }}>\n                  <Icon\n                    className=\"hover-note\"\n                    name=\"sticky note outline\"\n                    role=\"button\"\n                    onClick={() => {\n                      const constructedTest = constructTest(\n                        data.testCases,\n                        test.inherit,\n                        test.code,\n                        test.evaluate,\n                      );\n                      const formatted = prettier.format(constructedTest, {\n                        parser: 'babel',\n                        plugins: [parserBabel],\n                      });\n                      dispatch(setNoteCode(formatted));\n                      dispatch(setOpen(true));\n                    }}\n                  ></Icon>\n                </Table.Cell>\n                <Table.Cell>{test.name}</Table.Cell>\n                <Table.Cell>\n                  {typeof test.expected !== 'string'\n                    ? JSON.stringify(test.expected)\n                    : test.expected}\n                </Table.Cell>\n                <Table.Cell>{test.actual}</Table.Cell>\n                <Table.Cell>{test.error}</Table.Cell>\n                <Table.Cell style={{ textAlign: 'center' }}>\n                  {test.ok ? (\n                    <Icon color=\"green\" name=\"checkmark\" />\n                  ) : (\n                    <Icon color=\"red\" name=\"checkmark\" />\n                  )}\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\nexport default TestCaseTable;\n","import * as React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { inventory } from '../data/inventory.js';\nimport TestCaseTable from './TestCaseTable';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport showdown from 'showdown';\nimport { setActiveIndex } from '../redux/gameStore.js';\n\nconst converter = new showdown.Converter();\n\nfunction TabCards() {\n  const dispatch = useDispatch();\n  const isBusyTesting = useSelector(state => state.game.isBusyTesting);\n  const activeIndex = useSelector(state => state.game.activeIndex);\n  const results = useSelector(state => state.game.results);\n\n  const { id } = useParams();\n  const data = inventory[id];\n\n  if (!data) {\n    return [];\n  }\n\n  const hasTests = results.length;\n\n  function createMarkup() {\n    return { __html: converter.makeHtml(data.problemText) };\n  }\n\n  return (\n    <Card fluid raised={true} style={{ height: 'calc(32vh - 40px)' }}>\n      <p style={{ padding: '10px 0 0 10px' }}>\n        <span\n          className={activeIndex === 0 ? 'pane-base chosen-pane' : 'pane-base'}\n          onClick={() => dispatch(setActiveIndex(0))}\n        >\n          Problem\n        </span>{' '}\n        |{' '}\n        <span\n          className={activeIndex === 1 ? 'pane-base chosen-pane' : 'pane-base'}\n          onClick={() => dispatch(setActiveIndex(1))}\n        >\n          Test Results\n        </span>\n      </p>\n\n      <Card.Content style={{ height: 'calc(32vh - 70px)', overflowY: 'scroll' }}>\n        {activeIndex === 0 ? <div dangerouslySetInnerHTML={createMarkup()} /> : null}\n\n        {activeIndex === 1 ? (\n          isBusyTesting ? (\n            <p>Testing in Progress...</p>\n          ) : !hasTests ? (\n            <p>Tests have not been run yet for this problem.</p>\n          ) : (\n            <TestCaseTable id={id} />\n          )\n        ) : null}\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default TabCards;\n","import { inventory } from '../data/inventory.js';\nimport * as React from 'react';\nimport EditorMain from './EditorMain.js';\nimport EditorSecondary from './EditorSecondary.js';\nimport { useParams } from 'react-router-dom';\nimport TabCards from './TabCards';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setValue, setValue2, setRevealButtonPressed, setIsRunning } from '../redux/gameStore.js';\n\nfunction Problem() {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.game.value);\n  const value2 = useSelector(state => state.game.value2);\n  const revealButtonPressed = useSelector(state => state.game.revealButtonPressed);\n  const totalSeconds = useSelector(state => state.game.totalSeconds);\n\n  const { id } = useParams();\n  const data = inventory[id];\n\n  React.useEffect(() => {\n    if (!data) {\n      return;\n    }\n\n    // if nothing in main editor, place minimal in there.\n    if (!value) {\n      const transform = [];\n      data.solution.solutionLines.forEach(line => {\n        if (line.stage === 0) {\n          transform.push(line.text);\n        }\n      });\n      dispatch(setValue(transform.join('\\n')));\n    }\n\n    if (\n      !revealButtonPressed &&\n      totalSeconds > data.solution.stages[data.solution.stages.length - 1]\n    ) {\n      dispatch(setRevealButtonPressed(true));\n      dispatch(setIsRunning(false));\n    }\n\n    let durationIndex = 0;\n    for (let [index, duration] of data.solution.stages.entries()) {\n      if (totalSeconds >= duration) {\n        durationIndex = index;\n      }\n    }\n\n    if (revealButtonPressed) {\n      durationIndex = Infinity;\n    }\n\n    const transform = data.solution.solutionLines\n      .map(line => {\n        if (line.stage <= durationIndex) {\n          return line.text;\n        }\n        return '  //';\n      })\n      .join('\\n');\n\n    if (JSON.stringify(value2) !== JSON.stringify(transform)) {\n      dispatch(setValue2(transform));\n    }\n  }, [data, revealButtonPressed, totalSeconds, value, value2, dispatch]);\n\n  if (!data) {\n    return <p>Problem Not Found</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <div style={{ padding: '1vh 1vw' }}>\n        <div style={{ height: 'calc(35vh - 40px)', padding: '1vh 0 1vh 0vw' }}>\n          <TabCards />\n        </div>\n        <div className=\"editor-area columns\">\n          <div className=\"editor-area column\">\n            <EditorMain />\n          </div>\n          <div className=\"column\">\n            <EditorSecondary />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Problem;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { categories, MIN_EFFORT, MAX_EFFORT } from '../data/inventory';\n\nconst defaultCategoryData = categories.map(d => {\n  return { name: d, isSelected: true };\n});\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: {\n    selections: [],\n    results: [],\n    showModal: false,\n    activeProblemText: '',\n    categories: defaultCategoryData,\n    dsChecked: true,\n    algChecked: true,\n    minEffort: MIN_EFFORT,\n    maxEffort: MAX_EFFORT,\n    begChecked: true,\n    intChecked: true,\n    advChecked: true,\n  },\n  reducers: {\n    setSelections: (state, { type, payload }) => {\n      state.selections = payload;\n    },\n    shiftSelection: (state, { type, payload }) => {\n      state.selections = state.selections.slice(1);\n    },\n    setResults: (state, { type, payload }) => {\n      state.results = payload;\n    },\n    setShowModal: (state, { type, payload }) => {\n      state.showModal = payload;\n    },\n    setActiveProblemText: (state, { type, payload }) => {\n      state.activeProblemText = payload;\n    },\n    setCategories: (state, { type, payload }) => {\n      state.categories = payload;\n    },\n    setDsChecked: (state, { type, payload }) => {\n      state.dsChecked = payload;\n    },\n    setAlgChecked: (state, { type, payload }) => {\n      state.algChecked = payload;\n    },\n    setEffortSlider: (state, { type, payload }) => {\n      state.minEffort = payload[0];\n      state.maxEffort = payload[1];\n    },\n    pressReset: (state, { type, payload }) => {\n      state.categories = defaultCategoryData;\n      state.minEffort = MIN_EFFORT;\n      state.maxEffort = MAX_EFFORT;\n      state.dsChecked = true;\n      state.algChecked = true;\n      state.begChecked = true;\n      state.intChecked = true;\n      state.advChecked = true;\n    },\n    setBegChecked: (state, { type, payload }) => {\n      state.begChecked = payload;\n    },\n    setIntChecked: (state, { type, payload }) => {\n      state.intChecked = payload;\n    },\n    setAdvChecked: (state, { type, payload }) => {\n      state.advChecked = payload;\n    },\n  },\n});\n\nexport const {\n  setSelections,\n  setResults,\n  setShowModal,\n  setActiveProblemText,\n  setCategories,\n  setDsChecked,\n  setAlgChecked,\n  pressReset,\n  setEffortSlider,\n  shiftSelection,\n  setBegChecked,\n  setIntChecked,\n  setAdvChecked,\n} = filterSlice.actions;\n\nexport const filterReducer = filterSlice.reducer;\n","import * as React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport { getPersonalBests } from './personalBests.js';\nimport { inventory } from './data/inventory.js';\nimport { useHistory } from 'react-router-dom';\nimport { convertToTimer } from './util.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport showdown from 'showdown';\nimport { setSessionHistory } from './redux/gameStore';\nimport { setActiveProblemText, setShowModal } from './redux/filterStore';\nconst converter = new showdown.Converter();\n\nfunction SessionStats() {\n  const dispatch = useDispatch();\n  const sessionHistory = useSelector(state => state.game.sessionHistory);\n\n  console.log({ inventory, sessionHistory });\n\n  const history = useHistory();\n  const personalBests = getPersonalBests();\n\n  console.log({ personalBests });\n\n  const showModalMarkdown = problemText => {\n    dispatch(setActiveProblemText(problemText));\n    dispatch(setShowModal(true));\n  };\n\n  return (\n    <div style={{ paddingBottom: '30px' }}>\n      <h2 style={{ margin: '0 auto', padding: '30px 0', textAlign: 'center' }}>\n        Session Statistics\n      </h2>\n\n      <div\n        style={{\n          margin: 'auto',\n          height: '90px',\n          width: '60vw',\n          maxWidth: '500px',\n          padding: '20px 0',\n        }}\n      >\n        <Button\n          style={{ float: 'left', width: '138px' }}\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          Go Home\n        </Button>\n        <Button\n          style={{ float: 'right', width: '138px' }}\n          onClick={() => {\n            dispatch(setSessionHistory([]));\n          }}\n        >\n          Clear Stats\n        </Button>\n      </div>\n\n      <Table style={{ margin: 'auto', width: '80vw', maxWidth: '1200px', letterSpacing: '1px' }}>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell style={{ textAlign: 'center' }}>Result</Table.HeaderCell>\n            <Table.HeaderCell style={{ textAlign: 'center' }}>Best</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {sessionHistory.map((entry, index) => {\n            const measuredTime = convertToTimer(entry.seconds);\n            const bestTime = convertToTimer(personalBests[entry.id]);\n\n            return (\n              <Table.Row\n                key={index}\n                style={{\n                  backgroundColor:\n                    measuredTime === bestTime ? `rgba(0,255,0,0.2)` : `rgba(255,0,0,0.2)`,\n                }}\n              >\n                <Table.Cell>{entry.id}</Table.Cell>\n                <Table.Cell>\n                  <div\n                    style={{ display: 'inline' }}\n                    className=\"hover-link\"\n                    onClick={() => showModalMarkdown(inventory[entry.id].problemText)}\n                    dangerouslySetInnerHTML={{\n                      __html: converter.makeHtml(inventory[entry.id].problemName),\n                    }}\n                  ></div>\n                </Table.Cell>\n                <Table.Cell style={{ textAlign: 'center' }}>{measuredTime}</Table.Cell>\n                <Table.Cell style={{ textAlign: 'center' }}>{bestTime}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n\n      {!sessionHistory.length ? (\n        <p style={{ padding: '10px', margin: 'auto', width: '80vw' }}>\n          The session history is empty.\n        </p>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SessionStats;\n","import * as React from 'react';\nimport { Menu, Button, Icon, Popup } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { convertToTimer, colorCodeTime } from './util.js';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { inventory } from './data/inventory.js';\nimport { clickRun } from './redux/thunks';\nimport {\n  clickNextToResults,\n  clickSkipToResults,\n  clickNext,\n  clickSkip,\n  revealAnswer,\n} from './redux/gameStore';\nimport { shiftSelection, pressReset } from './redux/filterStore';\n\nfunction MainMenu() {\n  const dispatch = useDispatch();\n  const isBusyTesting = useSelector(state => state.game.isBusyTesting);\n  const revealButtonPressed = useSelector(state => state.game.revealButtonPressed);\n  const results = useSelector(state => state.game.results);\n  const totalSeconds = useSelector(state => state.game.totalSeconds);\n  const selections = useSelector(state => state.filter.selections);\n\n  const history = useHistory();\n  const { id } = useParams();\n  const data = inventory[id];\n\n  let passedTests = 0;\n  for (let result of results) {\n    if (result.ok) {\n      passedTests++;\n    }\n  }\n\n  const totalTests = data && data.testCases && data.testCases.length;\n  const showNextButton = totalTests === passedTests;\n  const hasNext = Boolean(selections && selections.length > 0);\n  const passedAllTests = results.length > 0 && results.every(d => d.ok);\n\n  return (\n    <Menu>\n      {data && id ? (\n        <Menu.Item>\n          <Button.Group>\n            <Popup\n              content=\"Home\"\n              trigger={\n                <Button\n                  icon\n                  onClick={() => {\n                    history.push('/');\n                  }}\n                >\n                  <Icon name=\"home\" />\n                </Button>\n              }\n            />\n          </Button.Group>\n        </Menu.Item>\n      ) : null}\n      <Menu.Item>\n        <span style={{ fontWeight: 'bolder', fontSize: '20px', fontVariant: 'small-caps' }}>\n          Puzzler\n        </span>\n      </Menu.Item>\n      {!id ? (\n        <Menu.Item>\n          <Button.Group>\n            <Popup\n              content=\"Reset Filters\"\n              trigger={\n                <Button\n                  icon\n                  onClick={() => {\n                    dispatch(pressReset());\n                  }}\n                >\n                  <Icon name=\"undo\" />\n                </Button>\n              }\n            />\n          </Button.Group>\n        </Menu.Item>\n      ) : null}\n      {data && id ? (\n        <React.Fragment>\n          <Menu.Item>\n            <Button.Group>\n              <Popup\n                content=\"Run Tests\"\n                trigger={\n                  <Button\n                    icon\n                    onClick={() => {\n                      if (!isBusyTesting && !revealButtonPressed) {\n                        dispatch(clickRun(id));\n                      }\n                    }}\n                    disabled={isBusyTesting || revealButtonPressed}\n                  >\n                    <Icon name=\"rocket\" className={isBusyTesting ? 'animate-icon' : ''} />\n                  </Button>\n                }\n              />\n\n              <Popup\n                content=\"Proceed to Next Problem\"\n                trigger={\n                  <Button\n                    icon\n                    onClick={() => {\n                      if (showNextButton) {\n                        if (hasNext) {\n                          const nextId = selections[0];\n                          dispatch(clickNext(id));\n                          dispatch(shiftSelection());\n                          history.push(`/${nextId}`);\n                        } else {\n                          dispatch(clickNextToResults(id));\n                          history.push(`/sessionStats`);\n                        }\n                      }\n                    }}\n                    disabled={!showNextButton}\n                  >\n                    <Icon name=\"step forward\" />\n                  </Button>\n                }\n              />\n            </Button.Group>\n          </Menu.Item>\n\n          <Menu.Item>\n            <span\n              style={{\n                color: colorCodeTime(totalSeconds, data, revealButtonPressed, passedAllTests),\n              }}\n            >\n              {convertToTimer(totalSeconds)}\n            </span>\n            {contextMessage(revealButtonPressed, passedAllTests)}\n          </Menu.Item>\n\n          {!hasNext ? (\n            <Menu.Item>\n              <span\n                style={{\n                  fontWeight: 'bold',\n                  color: 'orange',\n                }}\n              >\n                Last Problem\n              </span>\n            </Menu.Item>\n          ) : null}\n\n          <Menu.Item>\n            <Button.Group>\n              <Popup\n                content=\"Reveal Solution\"\n                trigger={\n                  <Button\n                    icon\n                    onClick={() => {\n                      if (!revealButtonPressed && !passedAllTests) {\n                        dispatch(revealAnswer({ id, data }));\n                      }\n                    }}\n                    disabled={revealButtonPressed || passedAllTests}\n                  >\n                    <Icon name=\"eye\" />\n                  </Button>\n                }\n              />\n            </Button.Group>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Button.Group>\n              <Popup\n                content=\"Skip this Problem\"\n                trigger={\n                  <Button\n                    icon\n                    onClick={() => {\n                      if (!passedAllTests) {\n                        if (hasNext) {\n                          const nextId = selections[0];\n                          dispatch(clickSkip(id));\n                          dispatch(shiftSelection());\n                          history.push(`/${nextId}`);\n                        } else {\n                          dispatch(clickSkipToResults(id));\n                          history.push(`/sessionStats`);\n                        }\n                      }\n                    }}\n                    disabled={passedAllTests}\n                  >\n                    <Icon name=\"fast forward\" />\n                  </Button>\n                }\n              />\n            </Button.Group>\n          </Menu.Item>\n        </React.Fragment>\n      ) : null}\n\n      <Menu.Item position=\"right\">\n        <Popup\n          content=\"See Session Stats\"\n          trigger={\n            <Button\n              icon\n              onClick={() => {\n                // if not on homepage\n                if (id) {\n                  dispatch(clickSkipToResults(id));\n                }\n                history.push('/sessionStats');\n              }}\n            >\n              <Icon name=\"file alternate outline\" />\n            </Button>\n          }\n        />\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nfunction contextMessage(revealButtonPressed, passedAllTests) {\n  if (passedAllTests) {\n    return <span style={{ color: 'green', fontWeight: 'bold' }}>- PASSED!</span>;\n  } else if (revealButtonPressed) {\n    return <span style={{ color: 'red' }}>- Stopped</span>;\n  } else {\n    return null;\n  }\n}\n\nexport default MainMenu;\n","import * as React from 'react';\nimport { Card, Table, Icon, Button, Divider } from 'semantic-ui-react';\nimport { inventory } from '../data/inventory';\nimport { useDispatch, useSelector } from 'react-redux';\nimport showdown from 'showdown';\nimport { setSelections, setActiveProblemText, setShowModal } from '../redux/filterStore';\n\nconst converter = new showdown.Converter();\n\nfunction ResultsCard() {\n  const dispatch = useDispatch();\n  const selections = useSelector(state => state.filter.selections);\n  const results = useSelector(state => state.filter.results);\n\n  const addProblemId = problemID => {\n    dispatch(setSelections([...selections, problemID]));\n  };\n\n  const subtractProblemId = problemID => {\n    dispatch(setSelections(selections.filter(d => d !== problemID)));\n  };\n\n  const showModalMarkdown = problemText => {\n    dispatch(setActiveProblemText(problemText));\n    dispatch(setShowModal(true));\n  };\n\n  // results which don't include selected problems\n  const filteredResults = results.filter(d => {\n    return !selections.includes(d);\n  });\n\n  const addRandom = () => {\n    const random = filteredResults[Math.floor(Math.random() * filteredResults.length)];\n    addProblemId(random);\n  };\n\n  return (\n    <Card style={{ width: '100%', height: '100%' }}>\n      <Card.Content header=\"Filter Results\" />\n      <Divider style={{ padding: '0', margin: '0' }} />\n      <div style={{ overflowY: 'scroll' }}>\n        <div style={{ padding: '1em', height: '63px' }}>\n          <div style={{ display: 'inline', height: '36px', lineHeight: '36px', float: 'left' }}>\n            Found {filteredResults.length} results.\n          </div>\n          <Button\n            onClick={() => addRandom()}\n            disabled={Boolean(!filteredResults.length)}\n            icon\n            labelPosition=\"right\"\n            style={{ display: 'inline', float: 'right' }}\n          >\n            Add Random\n            <Icon name=\"right arrow\" />\n          </Button>\n        </div>\n        <div style={{ padding: '0 1em 1em 1em', clear: 'both' }}>\n          <Table celled compact=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Difficulty</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Effort</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Category</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Action</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            {}\n            <Table.Body>\n              {filteredResults.length ? (\n                filteredResults.map(id => {\n                  const problem = inventory[id];\n                  const inProblemSet = selections.includes(problem.problemID);\n                  return (\n                    <Table.Row\n                      key={problem.problemID}\n                      className={inProblemSet ? 'existing-selection' : ''}\n                    >\n                      <Table.Cell>\n                        <div\n                          style={{ display: 'inline' }}\n                          className=\"hover-link\"\n                          onClick={() => showModalMarkdown(problem.problemText)}\n                          dangerouslySetInnerHTML={{\n                            __html: converter.makeHtml(\n                              `**${problem.problemID}**:  ` + problem.problemName,\n                            ),\n                          }}\n                        ></div>\n                      </Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>\n                        <span\n                          style={{\n                            backgroundColor: 'azure',\n                            color: 'black',\n                            display: 'inline-block',\n                            border: '1px solid darkslategrey',\n                            borderRadius: '50%',\n                            width: '1.5em',\n                            height: '1.5em',\n                            lineHeight: '1.25em',\n                            verticalAlign: 'center',\n                            boxShadow: '1px 1px 2px lightslategrey',\n                          }}\n                        >\n                          {problem.difficulty}\n                        </span>\n                      </Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>{problem.effort}</Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>{problem.category}</Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>\n                        {inProblemSet ? (\n                          <Button icon onClick={() => subtractProblemId(problem.problemID)}>\n                            <Icon className=\"hover-circle-off\" name=\"minus\" />\n                          </Button>\n                        ) : (\n                          <Button icon onClick={() => addProblemId(problem.problemID)}>\n                            <Icon className=\"hover-circle-on\" name=\"add\" />\n                          </Button>\n                        )}\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })\n              ) : (\n                <Table.Row key={0}>\n                  <Table.Cell colSpan=\"4\">No Results</Table.Cell>\n                </Table.Row>\n              )}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ResultsCard;\n","import * as React from 'react';\nimport { Card, Table, Button, Icon, Divider } from 'semantic-ui-react';\nimport { inventory } from '../data/inventory';\nimport { useDispatch, useSelector } from 'react-redux';\nimport showdown from 'showdown';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  setSelections,\n  setActiveProblemText,\n  setShowModal,\n  shiftSelection,\n} from '../redux/filterStore';\nimport { clickNext } from '../redux/gameStore';\n\nconst converter = new showdown.Converter();\n\nfunction SelectionsCard() {\n  const history = useHistory();\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const selections = useSelector(state => state.filter.selections);\n\n  const clearAll = () => {\n    dispatch(setSelections([]));\n  };\n\n  const clickStart = () => {\n    const nextId = selections[0];\n    dispatch(clickNext(id));\n    dispatch(shiftSelection());\n    history.push(`/${nextId}`);\n  };\n\n  const subtractProblemId = problemID => {\n    dispatch(setSelections(selections.filter(d => d !== problemID)));\n  };\n\n  const showModalMarkdown = problemText => {\n    dispatch(setActiveProblemText(problemText));\n    dispatch(setShowModal(true));\n  };\n\n  return (\n    <Card style={{ width: '100%', height: '100%' }}>\n      <Card.Content header=\"Selections\" />\n      <Divider style={{ padding: '0', margin: '0' }} />\n      <div style={{ overflowY: 'scroll' }}>\n        <div style={{ padding: '1em', height: '63px' }}>\n          <Button\n            disabled={Boolean(!selections.length)}\n            style={{ float: 'left' }}\n            onClick={clearAll}\n          >\n            Clear All\n          </Button>\n          <Button\n            style={{ float: 'right' }}\n            onClick={clickStart}\n            disabled={Boolean(!selections.length)}\n            primary={true}\n          >\n            START\n          </Button>\n        </div>\n        <Divider style={{ padding: '0', margin: '0' }} />\n        <div style={{ padding: '1em 1em 0 1em' }}>{selections.length} Problem(s) Selected.</div>\n\n        <div style={{ padding: '1em' }}>\n          <Table celled compact=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Difficulty</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Effort</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Category</Table.HeaderCell>\n                <Table.HeaderCell style={{ textAlign: 'center' }}>Action</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {selections.length ? (\n                selections.map(id => {\n                  const problem = inventory[id];\n                  return (\n                    <Table.Row key={problem.problemID}>\n                      <Table.Cell>\n                        <div\n                          style={{ display: 'inline' }}\n                          className=\"hover-link\"\n                          onClick={() => showModalMarkdown(problem.problemText)}\n                          dangerouslySetInnerHTML={{\n                            __html: converter.makeHtml(\n                              `**${problem.problemID}**:  ` + problem.problemName,\n                            ),\n                          }}\n                        ></div>\n                      </Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>\n                        <span\n                          style={{\n                            backgroundColor: 'azure',\n                            color: 'black',\n                            display: 'inline-block',\n                            border: '1px solid darkslategrey',\n                            borderRadius: '50%',\n                            width: '1.5em',\n                            height: '1.5em',\n                            lineHeight: '1.25em',\n                            verticalAlign: 'center',\n                            boxShadow: '1px 1px 2px lightslategrey',\n                          }}\n                        >\n                          {problem.difficulty}\n                        </span>\n                      </Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>{problem.effort}</Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>{problem.category}</Table.Cell>\n                      <Table.Cell style={{ textAlign: 'center' }}>\n                        <Button icon onClick={() => subtractProblemId(problem.problemID)}>\n                          <Icon className=\"hover-circle-off\" name=\"minus\" />\n                        </Button>\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })\n              ) : (\n                <Table.Row key={0}>\n                  <Table.Cell colSpan=\"4\">No Selections</Table.Cell>\n                </Table.Row>\n              )}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SelectionsCard;\n","import * as React from 'react';\nimport { Card, Checkbox, Button, Popup, Divider } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCategories } from '../redux/filterStore';\n\nexport default function CategoryCard() {\n  const dispatch = useDispatch();\n  const categories = useSelector(state => state.filter.categories);\n\n  const updateCheckbox = name => {\n    const updatedCategories = categories.map(item => {\n      if (item.name === name) {\n        return { name: item.name, isSelected: !item.isSelected };\n      }\n      return item;\n    });\n    dispatch(setCategories(updatedCategories));\n  };\n\n  const selectAll = () => {\n    dispatch(\n      setCategories(\n        categories.map(d => {\n          return { name: d.name, isSelected: true };\n        }),\n      ),\n    );\n  };\n\n  const clearAll = () => {\n    dispatch(\n      setCategories(\n        categories.map(d => {\n          return { name: d.name, isSelected: false };\n        }),\n      ),\n    );\n  };\n\n  const allAreSelected = categories.every(d => d.isSelected === true);\n  const noneAreSelected = categories.every(d => d.isSelected === false);\n\n  return (\n    <Card style={{ width: '100%', height: '100%' }}>\n      <Card.Content header=\"Categories\" />\n      <Divider style={{ padding: '0', margin: '0' }} />\n      <div style={{ width: '100%', height: '100%', overflowY: 'scroll' }}>\n        <div style={{ padding: '1em' }}>\n          <Popup\n            content=\"Select All\"\n            trigger={<Button icon=\"add\" disabled={allAreSelected} onClick={selectAll} />}\n          />\n          <Popup\n            content=\"Clear All\"\n            trigger={<Button icon=\"remove\" disabled={noneAreSelected} onClick={clearAll} />}\n          />\n        </div>\n        <Divider style={{ padding: '0', margin: '0' }} />\n        <div style={{ padding: '1em' }}>\n          {categories.map(item => {\n            return (\n              <Checkbox\n                style={{ display: 'block', padding: '5px 5px' }}\n                key={item.name}\n                label={item.name}\n                onChange={() => {\n                  updateCheckbox(item.name);\n                }}\n                checked={item.isSelected}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { Card, Checkbox } from 'semantic-ui-react';\nimport SliderView from 'semantic-ui-react-slider';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MIN_EFFORT, MAX_EFFORT } from '../data/inventory';\nimport {\n  setDsChecked,\n  setAlgChecked,\n  setEffortSlider,\n  setBegChecked,\n  setIntChecked,\n  setAdvChecked,\n} from '../redux/filterStore';\n\nfunction ControlCard() {\n  const dispatch = useDispatch();\n  const dsChecked = useSelector(state => state.filter.dsChecked);\n  const algChecked = useSelector(state => state.filter.algChecked);\n  const minEffort = useSelector(state => state.filter.minEffort);\n  const maxEffort = useSelector(state => state.filter.maxEffort);\n  const begChecked = useSelector(state => state.filter.begChecked);\n  const intChecked = useSelector(state => state.filter.intChecked);\n  const advChecked = useSelector(state => state.filter.advChecked);\n\n  const onEffortSliderChange = (minValue, maxValue) => {\n    dispatch(setEffortSlider([minValue, maxValue]));\n  };\n\n  return (\n    <Card style={{ width: '100%', height: '100%', overflowY: 'scroll' }}>\n      <Card.Content header=\"Options\" />\n      <Card.Content style={{ width: '100%', height: '100%', padding: '1em 2em .5em 2em' }}>\n        <div style={{ display: 'block', width: '100%', height: '50%' }}>\n          <div style={{ display: 'block', width: '50%', float: 'left' }}>\n            <Checkbox\n              style={{ display: 'block', padding: '5px 0' }}\n              label=\"Beginner\"\n              onChange={() => {\n                dispatch(setBegChecked(!begChecked));\n              }}\n              checked={begChecked}\n            />\n\n            <Checkbox\n              style={{ display: 'block', padding: '5px 0' }}\n              label=\"Intermediate\"\n              onChange={() => {\n                dispatch(setIntChecked(!intChecked));\n              }}\n              checked={intChecked}\n            />\n\n            <Checkbox\n              style={{ display: 'block', padding: '5px 0' }}\n              label=\"Advanced\"\n              onChange={() => {\n                dispatch(setAdvChecked(!advChecked));\n              }}\n              checked={advChecked}\n            />\n          </div>\n          <div style={{ display: 'block', width: '50%', float: 'right' }}>\n            <Checkbox\n              style={{ display: 'block', padding: '5px 0' }}\n              label=\"Data Structures\"\n              onChange={() => {\n                dispatch(setDsChecked(!dsChecked));\n              }}\n              checked={dsChecked}\n            />\n\n            <Checkbox\n              style={{ display: 'block', padding: '5px 0' }}\n              label=\"Algorithms\"\n              onChange={() => {\n                dispatch(setAlgChecked(!algChecked));\n              }}\n              checked={algChecked}\n            />\n          </div>\n        </div>\n        <div style={{ display: 'block', width: '100%', height: '50%' }}>\n          <p style={{ fontWeight: 'bold', width: '100%', textAlign: 'center' }}>\n            Estimated Effort (lines)\n          </p>\n          <SliderView\n            className=\"slider-view\"\n            selectedMinValue={minEffort}\n            selectedMaxValue={maxEffort}\n            onSliderValuesChange={onEffortSliderChange}\n            sliderMinValue={MIN_EFFORT}\n            sliderMaxValue={MAX_EFFORT}\n          />\n        </div>\n      </Card.Content>\n    </Card>\n  );\n}\n\nexport default ControlCard;\n","import * as React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport CategoryCard from './CategoryCard';\nimport ControlCard from './ControlCard';\nimport { inventory } from '../data/inventory';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BEGINNER, INTERMEDIATE, ADVANCED } from '../data/constants.js';\nimport { setResults } from '../redux/filterStore';\n\nfunction Filters() {\n  const dispatch = useDispatch();\n  const categories = useSelector(state => state.filter.categories);\n  const dsChecked = useSelector(state => state.filter.dsChecked);\n  const algChecked = useSelector(state => state.filter.algChecked);\n  const minEffort = useSelector(state => state.filter.minEffort);\n  const maxEffort = useSelector(state => state.filter.maxEffort);\n  const begChecked = useSelector(state => state.filter.begChecked);\n  const intChecked = useSelector(state => state.filter.intChecked);\n  const advChecked = useSelector(state => state.filter.advChecked);\n\n  const runFilters = React.useCallback(() => {\n    const chosenCategories = categories.filter(d => d.isSelected).map(d => d.name);\n\n    const filtered = Object.keys(inventory)\n      .map(d => Number(d))\n      .filter(key => {\n        const item = inventory[String(key)];\n        // check vs categories\n        if (!chosenCategories.includes(item.category)) {\n          return false;\n        }\n        // check vs Beginner Intermediate Advanced\n        if (item.difficulty === BEGINNER && !begChecked) {\n          return false;\n        }\n        if (item.difficulty === INTERMEDIATE && !intChecked) {\n          return false;\n        }\n        if (item.difficulty === ADVANCED && !advChecked) {\n          return false;\n        }\n        // check vs effort\n        if (item.effort < minEffort || item.effort > maxEffort) {\n          return false;\n        }\n        // check vs DataStructure vs Algorithm\n        if (item.type === 'data-structure' && !dsChecked) {\n          return false;\n        }\n        if (item.type === 'algorithm' && !algChecked) {\n          return false;\n        }\n        return true;\n      });\n    dispatch(setResults(filtered));\n  }, [\n    algChecked,\n    categories,\n    dsChecked,\n    maxEffort,\n    minEffort,\n    begChecked,\n    intChecked,\n    advChecked,\n    dispatch,\n  ]);\n\n  React.useEffect(() => {\n    runFilters();\n  }, [runFilters]);\n\n  return (\n    <div\n      className=\"ui card\"\n      style={{\n        width: '100%',\n        height: '100%',\n        overflowY: 'hidden',\n        overflowX: 'hidden',\n      }}\n    >\n      <Card.Content>\n        <div\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            height: 'calc(48vh - 40px)',\n            width: '18vw',\n          }}\n        >\n          <CategoryCard categories={categories} />\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '19vw',\n            height: 'calc(48vh - 40px)',\n            width: '36vw',\n          }}\n        >\n          <ControlCard />\n        </div>\n      </Card.Content>\n    </div>\n  );\n}\n\nexport default Filters;\n","import * as React from 'react';\nimport ResultsCard from './ResultsCard.js';\nimport SelectionsCard from './SelectionsCard.js';\nimport Filters from './Filters.js';\n\nexport default function HomePage() {\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          position: 'absolute',\n          top: 'calc(40px + 3vh)',\n          left: '2vw',\n          height: 'calc(48vh - 40px)',\n          width: '55vw',\n        }}\n      >\n        <Filters />\n      </div>\n\n      <div\n        style={{\n          border: '1px solid yellow',\n          position: 'absolute',\n          top: 'calc(40px + 3vh)',\n          left: '58vw',\n          height: 'calc(94vh - 40px)',\n          width: '40vw',\n        }}\n      >\n        <SelectionsCard />\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          top: '52vh',\n          left: '2vw',\n          height: '45vh',\n          width: '55vw',\n        }}\n      >\n        <ResultsCard />\n      </div>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport showdown from 'showdown';\nimport { Modal, Button } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowModal } from './redux/filterStore';\n\nconst converter = new showdown.Converter();\n\nfunction ProblemTextModal() {\n  const dispatch = useDispatch();\n  const showModal = useSelector(state => state.game.showModal);\n  const activeProblemText = useSelector(state => state.game.activeProblemText);\n\n  return (\n    <Modal\n      onClose={() => dispatch(setShowModal(false))}\n      onOpen={() => dispatch(setShowModal(true))}\n      open={showModal}\n    >\n      <Modal.Header>Problem Text</Modal.Header>\n      <Modal.Content>\n        <div dangerouslySetInnerHTML={{ __html: converter.makeHtml(activeProblemText) }}></div>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button style={{ width: '138px' }} onClick={() => dispatch(setShowModal(false))}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default ProblemTextModal;\n","import * as React from 'react';\nimport Problem from './Game/Problem.js';\nimport SessionStats from './SessionStats.js';\nimport { Switch, Route } from 'react-router-dom';\nimport MainMenu from './MainMenu.js';\nimport HomePage from './Home/HomePage.js';\nimport { incrementTotalSeconds } from './redux/gameStore';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProblemTextModal from './ProblemTextModal';\n\nlet interval = null;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isRunning = useSelector(state => state.game.isRunning);\n\n  // timer implementation\n  React.useEffect(() => {\n    if (isRunning) {\n      interval = window.setInterval(() => {\n        dispatch(incrementTotalSeconds());\n      }, 1000);\n    } else if (interval) {\n      window.clearInterval(interval);\n    }\n  }, [isRunning, dispatch]);\n\n  return (\n    <React.Fragment>\n      <ProblemTextModal />\n      <Switch>\n        <Route exact path=\"/\">\n          <MainMenu />\n          <HomePage />\n        </Route>\n        <Route exact path=\"/sessionStats\" children={<SessionStats />} />\n        <Route exact path=\"/:id\">\n          <MainMenu />\n          <Problem />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-dawn';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/webpack-resolver';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { combineReducers } from 'redux';\nimport { gameReducer } from './redux/gameStore';\nimport { filterReducer } from './redux/filterStore';\n\nconst reducer = combineReducers({\n  game: gameReducer,\n  filter: filterReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: storageSession,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}