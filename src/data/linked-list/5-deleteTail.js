import { LINKED_LIST, DATA_STRUCTURE, BEGINNER } from '../constants.js';

const solution = [
  { stage: 0, text: 'class LinkedListNode {' },
  { stage: 0, text: '  constructor(value, next = null) {' },
  { stage: 0, text: '    this.value = value;' },
  { stage: 0, text: '    this.next = next;' },
  { stage: 0, text: '  }' },
  { stage: 0, text: '}' },
  { stage: 0, text: '' },
  { stage: 0, text: 'class LinkedList {' },
  { stage: 0, text: '  constructor() {' },
  { stage: 0, text: '    this.head = null;' },
  { stage: 0, text: '    this.tail = null;' },
  { stage: 0, text: '  }' },
  { stage: 0, text: '' },
  { stage: 1, text: '  deleteTail() {' },
  { stage: 2, text: '    const deletedTail = this.tail;' },
  { stage: 3, text: '' },
  { stage: 3, text: '    if (this.head === this.tail) {' },
  { stage: 4, text: '      this.head = null;' },
  { stage: 4, text: '      this.tail = null;' },
  { stage: 4, text: '      return deletedTail;' },
  { stage: 3, text: '    }' },
  { stage: 3, text: '' },
  { stage: 5, text: '    let currentNode = this.head;' },
  { stage: 5, text: '    while (currentNode.next) {' },
  { stage: 6, text: '      if (!currentNode.next.next) {' },
  { stage: 7, text: '        currentNode.next = null;' },
  { stage: 6, text: '      } else {' },
  { stage: 7, text: '        currentNode = currentNode.next;' },
  { stage: 6, text: '      }' },
  { stage: 5, text: '    }' },
  { stage: 6, text: '' },
  { stage: 6, text: '    this.tail = currentNode;' },
  { stage: 6, text: '' },
  { stage: 2, text: '    return deletedTail;' },
  { stage: 1, text: '  }' },
  { stage: 0, text: '' },
  { stage: 0, text: '}' },
  { stage: 0, text: '' },
];

export const data = {
  problemID: 5,
  problemName: 'Implement `deleteTail` in a Singly Linked List',
  problemText:
    'Write a **deleteTail** method in a Singly-Linked-List Class that will remove the last node (the tail) of a list (if it exists, else null) and return it.',
  testCases: [
    {
      id: 1,
      name: 'compiles',
      inherit: [],
      code: `const ll=new LinkedList();`,
      evaluate: `ll;`,
      expected: `{"head":null,"tail":null}`,
    },
  ],
  setupCode: '',
  category: LINKED_LIST,
  type: DATA_STRUCTURE,
  difficulty: BEGINNER,
  maxExecutionTime: 2,
  solution: {
    stages: [0, 30, 60, 90, 120, 150, 180, 240],
    solutionLines: solution,
  },
};
