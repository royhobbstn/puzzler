import { MIN_HEAP_CLASS_PLAIN } from '../code-imports/import-index.js';
import { ALGORITHM, TEMP, INTERMEDIATE } from '../constants.js';

const solution = [
  { stage: 0, text: '' },
  { stage: -1, text: 'class MinHeap {' },
  { stage: -1, text: '  /*' },
  { stage: -1, text: '    add(item: Number)' },
  { stage: -1, text: '    poll() Number' },
  { stage: -1, text: '    length() Number' },
  { stage: -1, text: '  */' },
  { stage: -1, text: '}' },
  { stage: 0, text: '' },
  { stage: 0, text: 'function find_k_largest_numbers(nums, k) {' },
  { stage: 1, text: '  const minHeap = new MinHeap();' },
  { stage: 2, text: '  for (let i = 0; i < k; i++) {' },
  { stage: 3, text: '    minHeap.add(nums[i]);' },
  { stage: 2, text: '  }' },
  { stage: 0, text: '' },
  { stage: 4, text: '  for (let i = k; i < nums.length; i++) {' },
  { stage: 5, text: '    if (nums[i] > minHeap.peek()) {' },
  { stage: 6, text: '      minHeap.poll();' },
  { stage: 6, text: '      minHeap.add(nums[i]);' },
  { stage: 5, text: '    }' },
  { stage: 4, text: '  }' },
  { stage: 0, text: '' },
  { stage: 7, text: '  let arr = [];' },
  { stage: 8, text: '  while (minHeap.length()) {' },
  { stage: 9, text: '    arr.push(minHeap.poll());' },
  { stage: 8, text: '  }' },
  { stage: 0, text: '' },
  { stage: 10, text: '  return arr;' },
  { stage: 0, text: '}' },
  { stage: 0, text: '' },
];

export const data = {
  problemID: 114,
  problemName: `Top K Numbers`,
  problemText: `Given an unsorted array of numbers, find the ‘K’ largest numbers in it.  Return them as an array sorted lowest to highest.`,
  testCases: [
    {
      id: 1,
      name: 'example 1',
      inherit: [],
      code: ``,
      evaluate: `find_k_largest_numbers([3, 1, 5, 12, 2, 11], 3);`,
      expected: JSON.stringify([5, 11, 12]),
    },
    {
      id: 2,
      name: 'example 2',
      inherit: [],
      code: ``,
      evaluate: `find_k_largest_numbers([5, 12, 11, -1, 12], 3);`,
      expected: JSON.stringify([11, 12, 12]),
    },
  ],
  setupCode: `${MIN_HEAP_CLASS_PLAIN}`,
  source: ['https://www.educative.io/courses/grokking-the-coding-interview/RM535yM9DW0'],
  tags: [INTERMEDIATE, TEMP, ALGORITHM],
  solution,
};
