import { SORTING, ALGORITHM, ADVANCED } from '../constants.js';

const solution = [
  { stage: 0, text: '' },
  { stage: 0, text: 'function quickSort(items) {' },
  { stage: 0, text: '' },
  { stage: 1, text: '  return quickSortHelper(items, 0, items.length - 1);' },
  { stage: 0, text: '}' },
  { stage: 0, text: '' },
  { stage: 2, text: 'function quickSortHelper(items, left, right) {' },
  { stage: 3, text: '  if (items.length > 1) {' },
  { stage: 4, text: '    const index = partition(items, left, right);' },
  { stage: 0, text: '' },
  { stage: 5, text: '    if (left < index - 1) {' },
  { stage: 6, text: '      quickSortHelper(items, left, index - 1);' },
  { stage: 5, text: '    }' },
  { stage: 0, text: '' },
  { stage: 5, text: '    if (index < right) {' },
  { stage: 6, text: '      quickSortHelper(items, index, right);' },
  { stage: 5, text: '    }' },
  { stage: 3, text: '  }' },
  { stage: 0, text: '' },
  { stage: 4, text: '  return items;' },
  { stage: 2, text: '}' },
  { stage: 0, text: '' },
  { stage: 7, text: 'function partition(array, left, right) {' },
  { stage: 8, text: '  const pivot = array[Math.floor((right + left) / 2)];' },
  { stage: 9, text: '  while (left <= right) {' },
  { stage: 10, text: '    while (pivot > array[left]) {' },
  { stage: 11, text: '      left++;' },
  { stage: 10, text: '    }' },
  { stage: 10, text: '    while (pivot < array[right]) {' },
  { stage: 11, text: '      right--;' },
  { stage: 10, text: '    }' },
  { stage: 0, text: '' },
  { stage: 12, text: '    if (left <= right) {' },
  { stage: 13, text: '      const temp = array[left];' },
  { stage: 13, text: '      array[left] = array[right];' },
  { stage: 13, text: '      array[right] = temp;' },
  { stage: 14, text: '      left++;' },
  { stage: 14, text: '      right--;' },
  { stage: 12, text: '    }' },
  { stage: 9, text: '  }' },
  { stage: 0, text: '' },
  { stage: 15, text: '  return left;' },
  { stage: 7, text: '}' },
  { stage: 0, text: '' },
];

export const data = {
  problemID: 62,
  problemName: 'Implement the quicksort algorithm.',
  problemText: `Implement a function **quickSort** which takes an array of unsorted integers, sorts them in place using the Quicksort algorithm and returns the array.`,
  testCases: [
    {
      id: 1,
      name: 'case 1',
      inherit: [],
      code: `const arr = [];`,
      evaluate: `quickSort(arr);`,
      expected: JSON.stringify([]),
    },
    {
      id: 2,
      name: 'case 2',
      inherit: [],
      code: `const arr = [5, 8, 1, 9, 3, 8, 2, 0, 2, 34, 2, 456, 342, 26, 75, 23];`,
      evaluate: `quickSort(arr);`,
      expected: JSON.stringify([0, 1, 2, 2, 2, 3, 5, 8, 8, 9, 23, 26, 34, 75, 342, 456]),
    },
    {
      id: 3,
      name: 'case 3',
      inherit: [],
      code: `const arr = [75, 98, 19, 99, 34, 48, 42, 40, 12, 134, 21, 1456, 3421, 1126, 1175, 2311];`,
      evaluate: `quickSort(arr);`,
      expected: JSON.stringify([
        12,
        19,
        21,
        34,
        40,
        42,
        48,
        75,
        98,
        99,
        134,
        1126,
        1175,
        1456,
        2311,
        3421,
      ]),
    },
  ],
  setupCode: '',
  tags: [ADVANCED, SORTING, ALGORITHM],
  solution,
};
